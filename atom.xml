<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kaidata</title>
  <subtitle>kai data analysis</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kaidata.github.io/"/>
  <updated>2017-06-09T06:41:18.156Z</updated>
  <id>http://kaidata.github.io/</id>
  
  <author>
    <name>KaiLee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>data-generator-数据生成纪要</title>
    <link href="http://kaidata.github.io/2017/06/09/data-generator-%E6%95%B0%E6%8D%AE%E7%94%9F%E6%88%90%E7%BA%AA%E8%A6%81/"/>
    <id>http://kaidata.github.io/2017/06/09/data-generator-数据生成纪要/</id>
    <published>2017-06-09T03:33:28.000Z</published>
    <updated>2017-06-09T06:41:18.156Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="格式化数据生成"><a href="#格式化数据生成" class="headerlink" title="格式化数据生成"></a>格式化数据生成</h3><h4 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h4><pre><code><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">scala.version</span>&gt;</span>2.11.8<span class="tag">&lt;/<span class="name">scala.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">scala.binary.version</span>&gt;</span>2.11<span class="tag">&lt;/<span class="name">scala.binary.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">spark.version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">spark.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">repo.url</span>&gt;</span>https://chaosdata.com<span class="tag">&lt;/<span class="name">repo.url</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-core_$&#123;scala.binary.version&#125;<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spark.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-sql_$&#123;scala.binary.version&#125;<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spark.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.binarywang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.testng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.9.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hbase<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hbase-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.0-cdh5.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hbase<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hbase-spark<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.0-cdh5.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.parquet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>parquet-avro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.avro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>avro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.avro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>avro-tools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.databricks<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-avro_$&#123;scala.binary.version&#125;<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>env-test<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>shade<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">filters</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;<span class="name">artifact</span>&gt;</span>*:*<span class="tag">&lt;/<span class="name">artifact</span>&gt;</span></div><div class="line">                                <span class="comment">&lt;!--过滤掉一下类型的文件,避免在服务器端运行出现签名问题--&gt;</span></div><div class="line">                                <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></div><div class="line">                                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>META-INF/*.SF<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></div><div class="line">                                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>META-INF/*.DSA<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></div><div class="line">                                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>META-INF/*.RSA<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></div><div class="line">                                <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">filters</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">transformers</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">transformer</span></span></div><div class="line">                                    <span class="attr">implementation</span>=<span class="string">"org.apache.maven.plugins.shade.resource.AppendingTransformer"</span>&gt;</div><div class="line">                                <span class="tag">&lt;<span class="name">resource</span>&gt;</span>META-INF/spring.handlers<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">transformer</span></span></div><div class="line">                                    <span class="attr">implementation</span>=<span class="string">"org.apache.maven.plugins.shade.resource.AppendingTransformer"</span>&gt;</div><div class="line">                                <span class="tag">&lt;<span class="name">resource</span>&gt;</span>META-INF/spring.schemas<span class="tag">&lt;/<span class="name">resource</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">transformers</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">source</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">url</span>&gt;</span>$&#123;repo.url&#125;/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">name</span>&gt;</span>chaosdata Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">id</span>&gt;</span>local-central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">url</span>&gt;</span>$&#123;repo.url&#125;/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">releases</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">id</span>&gt;</span>chaos-coms-3rd<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">url</span>&gt;</span>$&#123;repo.url&#125;/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">id</span>&gt;</span>chaos-coms-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">url</span>&gt;</span>$&#123;repo.url&#125;/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">id</span>&gt;</span>chaos-coms-release<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">url</span>&gt;</span>$&#123;repo.url&#125;/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">id</span>&gt;</span>central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">url</span>&gt;</span>$&#123;repo.url&#125;/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">releases</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></div></pre></td></tr></table></figure>
</code></pre><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="RandomValue"><a href="#RandomValue" class="headerlink" title="RandomValue"></a>RandomValue</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomValue</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String base = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String firstName = <span class="string">"赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚谢邹喻柏水窦章云苏潘葛奚范彭郎鲁韦昌马苗凤花方俞任袁柳酆鲍史唐费廉岑薛雷贺倪汤滕殷罗毕郝邬安常乐于时傅皮卞齐康伍余元卜顾孟平黄和穆萧尹姚邵湛汪祁毛禹狄米贝明臧计伏成戴谈宋茅庞熊纪舒屈项祝董梁杜阮蓝闵席季麻强贾路娄危江童颜郭梅盛林刁钟徐邱骆高夏蔡田樊胡凌霍虞万支柯咎管卢莫经房裘缪干解应宗宣丁贲邓郁单杭洪包诸左石崔吉钮龚程嵇邢滑裴陆荣翁荀羊於惠甄魏加封芮羿储靳汲邴糜松井段富巫乌焦巴弓牧隗山谷车侯宓蓬全郗班仰秋仲伊宫宁仇栾暴甘钭厉戎祖武符刘姜詹束龙叶幸司韶郜黎蓟薄印宿白怀蒲台从鄂索咸籍赖卓蔺屠蒙池乔阴郁胥能苍双闻莘党翟谭贡劳逄姬申扶堵冉宰郦雍却璩桑桂濮牛寿通边扈燕冀郏浦尚农温别庄晏柴瞿阎充慕连茹习宦艾鱼容向古易慎戈廖庚终暨居衡步都耿满弘匡国文寇广禄阙东殴殳沃利蔚越夔隆师巩厍聂晁勾敖融冷訾辛阚那简饶空曾毋沙乜养鞠须丰巢关蒯相查后江红游竺权逯盖益桓公万俟司马上官欧阳夏侯诸葛闻人东方赫连皇甫尉迟公羊澹台公冶宗政濮阳淳于仲孙太叔申屠公孙乐正轩辕令狐钟离闾丘长孙慕容鲜于宇文司徒司空亓官司寇仉督子车颛孙端木巫马公西漆雕乐正壤驷公良拓拔夹谷宰父谷粱晋楚阎法汝鄢涂钦段干百里东郭南门呼延归海羊舌微生岳帅缑亢况后有琴梁丘左丘东门西门商牟佘佴伯赏南宫墨哈谯笪年爱阳佟第五言福百家姓续"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String girl = <span class="string">"秀娟英华慧巧美娜静淑惠珠翠雅芝玉萍红娥玲芬芳燕彩春菊兰凤洁梅琳素云莲真环雪荣爱妹霞香月莺媛艳瑞凡佳嘉琼勤珍贞莉桂娣叶璧璐娅琦晶妍茜秋珊莎锦黛青倩婷姣婉娴瑾颖露瑶怡婵雁蓓纨仪荷丹蓉眉君琴蕊薇菁梦岚苑婕馨瑗琰韵融园艺咏卿聪澜纯毓悦昭冰爽琬茗羽希宁欣飘育滢馥筠柔竹霭凝晓欢霄枫芸菲寒伊亚宜可姬舒影荔枝思丽 "</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String boy = <span class="string">"伟刚勇毅俊峰强军平保东文辉力明永健世广志义兴良海山仁波宁贵福生龙元全国胜学祥才发武新利清飞彬富顺信子杰涛昌成康星光天达安岩中茂进林有坚和彪博诚先敬震振壮会思群豪心邦承乐绍功松善厚庆磊民友裕河哲江超浩亮政谦亨奇固之轮翰朗伯宏言若鸣朋斌梁栋维启克伦翔旭鹏泽晨辰士以建家致树炎德行时泰盛雄琛钧冠策腾楠榕风航弘"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String[] road = <span class="string">"重庆大厦,黑龙江路,十梅庵街,遵义路,湘潭街,瑞金广场,仙山街,仙山东路,仙山西大厦,白沙河路,赵红广场,机场路,民航街,长城南路,流亭立交桥,虹桥广场,长城大厦,礼阳路,风岗街,中川路,白塔广场,兴阳路,文阳街,绣城路,河城大厦,锦城广场,崇阳街,华城路,康城街,正阳路,和阳广场,中城路,江城大厦,顺城路,安城街,山城广场,春城街,国城路,泰城街,德阳路,明阳大厦,春阳路,艳阳街,秋阳路,硕阳街,青威高速,瑞阳街,丰海路,双元大厦,惜福镇街道,夏庄街道,古庙工业园,中山街,太平路,广西街,潍县广场,博山大厦,湖南路,济宁街,芝罘路,易州广场,荷泽四路,荷泽二街,荷泽一路,荷泽三大厦,观海二广场,广西支街,观海一路,济宁支街,莒县路,平度广场,明水路,蒙阴大厦,青岛路,湖北街,江宁广场,郯城街,天津路,保定街,安徽路,河北大厦,黄岛路,北京街,莘县路,济南街,宁阳广场,日照街,德县路,新泰大厦,荷泽路,山西广场,沂水路,肥城街,兰山路,四方街,平原广场,泗水大厦,浙江路,曲阜街,寿康路,河南广场,泰安路,大沽街,红山峡支路,西陵峡一大厦,台西纬一广场,台西纬四街,台西纬二路,西陵峡二街,西陵峡三路,台西纬三广场,台西纬五路,明月峡大厦,青铜峡路,台西二街,观音峡广场,瞿塘峡街,团岛二路,团岛一街,台西三路,台西一大厦,郓城南路,团岛三街,刘家峡路,西藏二街,西藏一广场,台西四街,三门峡路,城武支大厦,红山峡路,郓城北广场,龙羊峡路,西陵峡街,台西五路,团岛四街,石村广场,巫峡大厦,四川路,寿张街,嘉祥路,南村广场,范县路,西康街,云南路,巨野大厦,西江广场,鱼台街,单县路,定陶街,滕县路,钜野广场,观城路,汶上大厦,朝城路,滋阳街,邹县广场,濮县街,磁山路,汶水街,西藏路,城武大厦,团岛路,南阳街,广州路,东平街,枣庄广场,贵州街,费县路,南海大厦,登州路,文登广场,信号山支路,延安一街,信号山路,兴安支街,福山支广场,红岛支大厦,莱芜二路,吴县一街,金口三路,金口一广场,伏龙山路,鱼山支街,观象二路,吴县二大厦,莱芜一广场,金口二街,海阳路,龙口街,恒山路,鱼山广场,掖县路,福山大厦,红岛路,常州街,大学广场,龙华街,齐河路,莱阳街,黄县路,张店大厦,祚山路,苏州街,华山路,伏龙街,江苏广场,龙江街,王村路,琴屿大厦,齐东路,京山广场,龙山路,牟平街,延安三路,延吉街,南京广场,东海东大厦,银川西路,海口街,山东路,绍兴广场,芝泉路,东海中街,宁夏路,香港西大厦,隆德广场,扬州街,郧阳路,太平角一街,宁国二支路,太平角二广场,天台东一路,太平角三大厦,漳州路一路,漳州街二街,宁国一支广场,太平角六街,太平角四路,天台东二街,太平角五路,宁国三大厦,澳门三路,江西支街,澳门二路,宁国四街,大尧一广场,咸阳支街,洪泽湖路,吴兴二大厦,澄海三路,天台一广场,新湛二路,三明北街,新湛支路,湛山五街,泰州三广场,湛山四大厦,闽江三路,澳门四街,南海支路,吴兴三广场,三明南路,湛山二街,二轻新村镇,江南大厦,吴兴一广场,珠海二街,嘉峪关路,高邮湖街,湛山三路,澳门六广场,泰州二路,东海一大厦,天台二路,微山湖街,洞庭湖广场,珠海支街,福州南路,澄海二街,泰州四路,香港中大厦,澳门五路,新湛三街,澳门一路,正阳关街,宁武关广场,闽江四街,新湛一路,宁国一大厦,王家麦岛,澳门七广场,泰州一路,泰州六街,大尧二路,青大一街,闽江二广场,闽江一大厦,屏东支路,湛山一街,东海西路,徐家麦岛函谷关广场,大尧三路,晓望支街,秀湛二路,逍遥三大厦,澳门九广场,泰州五街,澄海一路,澳门八街,福州北路,珠海一广场,宁国二路,临淮关大厦,燕儿岛路,紫荆关街,武胜关广场,逍遥一街,秀湛四路,居庸关街,山海关路,鄱阳湖大厦,新湛路,漳州街,仙游路,花莲街,乐清广场,巢湖街,台南路,吴兴大厦,新田路,福清广场,澄海路,莆田街,海游路,镇江街,石岛广场,宜兴大厦,三明路,仰口街,沛县路,漳浦广场,大麦岛,台湾街,天台路,金湖大厦,高雄广场,海江街,岳阳路,善化街,荣成路,澳门广场,武昌路,闽江大厦,台北路,龙岩街,咸阳广场,宁德街,龙泉路,丽水街,海川路,彰化大厦,金田路,泰州街,太湖路,江西街,泰兴广场,青大街,金门路,南通大厦,旌德路,汇泉广场,宁国路,泉州街,如东路,奉化街,鹊山广场,莲岛大厦,华严路,嘉义街,古田路,南平广场,秀湛路,长汀街,湛山路,徐州大厦,丰县广场,汕头街,新竹路,黄海街,安庆路,基隆广场,韶关路,云霄大厦,新安路,仙居街,屏东广场,晓望街,海门路,珠海街,上杭路,永嘉大厦,漳平路,盐城街,新浦路,新昌街,高田广场,市场三街,金乡东路,市场二大厦,上海支路,李村支广场,惠民南路,市场纬街,长安南路,陵县支街,冠县支广场,小港一大厦,市场一路,小港二街,清平路,广东广场,新疆路,博平街,港通路,小港沿,福建广场,高唐街,茌平路,港青街,高密路,阳谷广场,平阴路,夏津大厦,邱县路,渤海街,恩县广场,旅顺街,堂邑路,李村街,即墨路,港华大厦,港环路,馆陶街,普集路,朝阳街,甘肃广场,港夏街,港联路,陵县大厦,上海路,宝山广场,武定路,长清街,长安路,惠民街,武城广场,聊城大厦,海泊路,沧口街,宁波路,胶州广场,莱州路,招远街,冠县路,六码头,金乡广场,禹城街,临清路,东阿街,吴淞路,大港沿,辽宁路,棣纬二大厦,大港纬一路,贮水山支街,无棣纬一广场,大港纬三街,大港纬五路,大港纬四街,大港纬二路,无棣二大厦,吉林支路,大港四街,普集支路,无棣三街,黄台支广场,大港三街,无棣一路,贮水山大厦,泰山支路,大港一广场,无棣四路,大连支街,大港二路,锦州支街,德平广场,高苑大厦,长山路,乐陵街,临邑路,嫩江广场,合江路,大连街,博兴路,蒲台大厦,黄台广场,城阳街,临淄路,安邱街,临朐路,青城广场,商河路,热河大厦,济阳路,承德街,淄川广场,辽北街,阳信路,益都街,松江路,流亭大厦,吉林路,恒台街,包头路,无棣街,铁山广场,锦州街,桓台路,兴安大厦,邹平路,胶东广场,章丘路,丹东街,华阳路,青海街,泰山广场,周村大厦,四平路,台东西七街,台东东二路,台东东七广场,台东西二路,东五街,云门二路,芙蓉山村,延安二广场,云门一街,台东四路,台东一街,台东二路,杭州支广场,内蒙古路,台东七大厦,台东六路,广饶支街,台东八广场,台东三街,四平支路,郭口东街,青海支路,沈阳支大厦,菜市二路,菜市一街,北仲三路,瑞云街,滨县广场,庆祥街,万寿路,大成大厦,芙蓉路,历城广场,大名路,昌平街,平定路,长兴街,浦口广场,诸城大厦,和兴路,德盛街,宁海路,威海广场,东山路,清和街,姜沟路,雒口大厦,松山广场,长春街,昆明路,顺兴街,利津路,阳明广场,人和路,郭口大厦,营口路,昌邑街,孟庄广场,丰盛街,埕口路,丹阳街,汉口路,洮南大厦,桑梓路,沾化街,山口路,沈阳街,南口广场,振兴街,通化路,福寺大厦,峄县路,寿光广场,曹县路,昌乐街,道口路,南九水街,台湛广场,东光大厦,驼峰路,太平山,标山路,云溪广场,太清路"</span>.split(<span class="string">","</span>);</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] email_suffix = <span class="string">"@gmail.com,@yahoo.com,@msn.com,@hotmail.com,@aol.com,@ask.com,@live.com,@qq.com,@0355.net,@163.com,@163.net,@263.net,@3721.net,@yeah.net,@googlemail.com,@126.com,@sina.com,@sohu.com,@yahoo.com.cn"</span>.split(<span class="string">","</span>);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getNum</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) (Math.random() * (end - start + <span class="number">1</span>) + start);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 返回Email</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> lMin 最小长度</div><div class="line">     * <span class="doctag">@param</span> lMax 最大长度</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getEmail</span><span class="params">(<span class="keyword">int</span> lMin, <span class="keyword">int</span> lMax)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> length = getNum(lMin, lMax);</div><div class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</div><div class="line">            <span class="keyword">int</span> number = (<span class="keyword">int</span>) (Math.random() * base.length());</div><div class="line">            sb.append(base.charAt(number));</div><div class="line">        &#125;</div><div class="line">        sb.append(email_suffix[(<span class="keyword">int</span>) (Math.random() * email_suffix.length)]);</div><div class="line">        <span class="keyword">return</span> sb.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 返回手机号码</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String[] telFirst = <span class="string">"134,135,136,137,138,139,150,151,152,157,158,159,130,131,132,155,156,133,153"</span>.split(<span class="string">","</span>);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getTel</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> index = getNum(<span class="number">0</span>, telFirst.length - <span class="number">1</span>);</div><div class="line">        String first = telFirst[index];</div><div class="line">        String second = String.valueOf(getNum(<span class="number">1</span>, <span class="number">888</span>) + <span class="number">10000</span>).substring(<span class="number">1</span>);</div><div class="line">        String third = String.valueOf(getNum(<span class="number">1</span>, <span class="number">9100</span>) + <span class="number">10000</span>).substring(<span class="number">1</span>);</div><div class="line">        <span class="keyword">return</span> first + second + third;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 返回中文姓名</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String name_sex = <span class="string">""</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getChineseName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> index = getNum(<span class="number">0</span>, firstName.length() - <span class="number">1</span>);</div><div class="line">        String first = firstName.substring(index, index + <span class="number">1</span>);</div><div class="line">        <span class="keyword">int</span> sex = getNum(<span class="number">0</span>, <span class="number">1</span>);</div><div class="line">        String str = boy;</div><div class="line">        <span class="keyword">int</span> length = boy.length();</div><div class="line">        <span class="keyword">if</span> (sex == <span class="number">0</span>) &#123;</div><div class="line">            str = girl;</div><div class="line">            length = girl.length();</div><div class="line">            name_sex = <span class="string">"女"</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            name_sex = <span class="string">"男"</span>;</div><div class="line">        &#125;</div><div class="line">        index = getNum(<span class="number">0</span>, length - <span class="number">1</span>);</div><div class="line">        String second = str.substring(index, index + <span class="number">1</span>);</div><div class="line">        <span class="keyword">int</span> hasThird = getNum(<span class="number">0</span>, <span class="number">1</span>);</div><div class="line">        String third = <span class="string">""</span>;</div><div class="line">        <span class="keyword">if</span> (hasThird == <span class="number">1</span>) &#123;</div><div class="line">            index = getNum(<span class="number">0</span>, length - <span class="number">1</span>);</div><div class="line">            third = str.substring(index, index + <span class="number">1</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> first + second + third;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 返回地址</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getRoad</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> index = getNum(<span class="number">0</span>, road.length - <span class="number">1</span>);</div><div class="line">        String first = road[index];</div><div class="line">        String second = String.valueOf(getNum(<span class="number">11</span>, <span class="number">150</span>)) + <span class="string">"号"</span>;</div><div class="line">        String third = <span class="string">"-"</span> + getNum(<span class="number">1</span>, <span class="number">20</span>) + <span class="string">"-"</span> + getNum(<span class="number">1</span>, <span class="number">10</span>);</div><div class="line">        <span class="keyword">return</span> first + second + third;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 数据封装</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</div><div class="line">        Map map = <span class="keyword">new</span> HashMap();</div><div class="line">        map.put(<span class="string">"name"</span>, getChineseName());</div><div class="line">        map.put(<span class="string">"sex"</span>, name_sex);</div><div class="line">        map.put(<span class="string">"road"</span>, getRoad());</div><div class="line">        map.put(<span class="string">"tel"</span>, getTel());</div><div class="line">        map.put(<span class="string">"email"</span>, getEmail(<span class="number">6</span>, <span class="number">9</span>));</div><div class="line">        <span class="keyword">return</span> map;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</div><div class="line">            System.out.println(getAddress());</div><div class="line"><span class="comment">//          System.out.println(getEmailName(6,9));</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="AvroWriter"><a href="#AvroWriter" class="headerlink" title="AvroWriter"></a>AvroWriter</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.<span class="type">File</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> cn.binarywang.tools.generator.&#123;<span class="type">ChineseAddressGenerator</span>, <span class="type">ChineseIDCardNumberGenerator</span>, <span class="type">ChineseMobileNumberGenerator</span>&#125;</div><div class="line"><span class="keyword">import</span> com.chaosdata.<span class="type">Person</span></div><div class="line"><span class="keyword">import</span> org.apache.avro.<span class="type">Schema</span></div><div class="line"><span class="keyword">import</span> org.apache.avro.mapred.<span class="type">AvroKey</span></div><div class="line"><span class="keyword">import</span> org.apache.avro.mapreduce.<span class="type">AvroKeyOutputFormat</span></div><div class="line"><span class="keyword">import</span> org.apache.hadoop.conf.<span class="type">Configuration</span></div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.<span class="type">NullWritable</span></div><div class="line"><span class="keyword">import</span> org.apache.spark.sql.types.&#123;<span class="type">StringType</span>, <span class="type">StructField</span>, <span class="type">StructType</span>&#125;</div><div class="line"><span class="keyword">import</span> org.apache.spark.sql.&#123;<span class="type">Row</span>, <span class="type">SQLContext</span>&#125;</div><div class="line"><span class="keyword">import</span> org.apache.spark.&#123;<span class="type">SparkConf</span>, <span class="type">SparkContext</span>&#125;</div><div class="line"></div><div class="line"><span class="keyword">import</span> scala.collection.mutable.<span class="type">ArrayBuffer</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">object</span> <span class="title">AvroWriter</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">genInfos</span></span>(): (<span class="type">String</span>, <span class="type">String</span>, <span class="type">String</span>, <span class="type">String</span>, <span class="type">String</span>) = &#123;</div><div class="line">    (<span class="type">ChineseIDCardNumberGenerator</span>.getInstance.generate, <span class="type">RandomValue</span>.getChineseName, <span class="type">RandomValue</span>.name_sex, <span class="type">ChineseAddressGenerator</span>.getInstance.generate, <span class="type">ChineseMobileNumberGenerator</span>.getInstance.generate)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">genPerson</span></span>(id: <span class="type">String</span>, name: <span class="type">String</span>, sex: <span class="type">String</span>, addr: <span class="type">String</span>, phone: <span class="type">String</span>): <span class="type">Person</span> = &#123;</div><div class="line">    <span class="keyword">val</span> person = <span class="keyword">new</span> <span class="type">Person</span>()</div><div class="line"></div><div class="line">    person.setId(id)</div><div class="line">    person.setName(name)</div><div class="line">    person.setSex(sex)</div><div class="line">    person.setAddr(addr)</div><div class="line">    person.setPhone(phone)</div><div class="line"></div><div class="line">    person</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</div><div class="line">    <span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setAppName(<span class="keyword">this</span>.getClass.getSimpleName).setMaster(<span class="string">"local"</span>)</div><div class="line">    <span class="keyword">val</span> sc = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</div><div class="line">    <span class="keyword">val</span> ssc = <span class="keyword">new</span> <span class="type">SQLContext</span>(sc)</div><div class="line"></div><div class="line">    <span class="comment">//    text(sc, ssc)</span></div><div class="line">    <span class="comment">//    avro(sc, ssc)</span></div><div class="line">    parquet(sc, ssc)</div><div class="line"></div><div class="line">    sc.stop()</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">text</span></span>(sc: <span class="type">SparkContext</span>, ssc: <span class="type">SQLContext</span>): <span class="type">Unit</span> = &#123;</div><div class="line">    <span class="keyword">for</span> (j &lt;- <span class="number">1</span> to <span class="number">1</span>) &#123;</div><div class="line">      <span class="keyword">val</span> bufer = <span class="keyword">new</span> <span class="type">ArrayBuffer</span>[(<span class="type">String</span>, <span class="type">String</span>, <span class="type">String</span>, <span class="type">String</span>, <span class="type">String</span>)]()</div><div class="line"></div><div class="line">      <span class="keyword">for</span> (i &lt;- (<span class="number">1</span> to <span class="number">1000000</span>)) &#123;</div><div class="line">        bufer.+=(genInfos)</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">import</span> ssc.implicits._</div><div class="line">      <span class="keyword">val</span> df = sc.parallelize(bufer).map(infos =&gt; <span class="type">Array</span>(infos).mkString(<span class="string">"\t\t"</span>)).toDF</div><div class="line">      df.write.text(<span class="string">"file:///F:\\datacenter\\output\\env\\text\\"</span> + <span class="type">System</span>.currentTimeMillis())</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ssc.clearCache()</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">avro</span></span>(sc: <span class="type">SparkContext</span>, ssc: <span class="type">SQLContext</span>): <span class="type">Unit</span> = &#123;</div><div class="line">    <span class="keyword">for</span> (j &lt;- <span class="number">1</span> to <span class="number">1</span>) &#123;</div><div class="line">      <span class="keyword">val</span> bufer = <span class="keyword">new</span> <span class="type">ArrayBuffer</span>[(<span class="type">String</span>, <span class="type">String</span>, <span class="type">String</span>, <span class="type">String</span>, <span class="type">String</span>)]()</div><div class="line"></div><div class="line">      <span class="keyword">for</span> (i &lt;- (<span class="number">1</span> to <span class="number">1000000</span>)) &#123;</div><div class="line">        bufer.+=(genInfos)</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">val</span> schema = <span class="keyword">new</span> <span class="type">Schema</span>.<span class="type">Parser</span>().parse(<span class="keyword">new</span> <span class="type">File</span>(<span class="string">"F:\\datacenter\\struct\\avro\\schema\\person.avsc"</span>))</div><div class="line">      <span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">Configuration</span>()</div><div class="line">      conf.set(<span class="string">"avro.schema.output.key"</span>, schema.toString)</div><div class="line">      <span class="keyword">val</span> rdd = sc.parallelize(bufer).map(infos =&gt; (<span class="keyword">new</span> <span class="type">AvroKey</span>(genPerson(infos._1, infos._2, infos._3, infos._4, infos._5)), <span class="literal">null</span>))</div><div class="line">        .saveAsNewAPIHadoopFile(<span class="string">"file:///F:\\datacenter\\output\\env\\avro\\"</span> + <span class="type">System</span>.currentTimeMillis(), classOf[<span class="type">Person</span>], classOf[<span class="type">NullWritable</span>], classOf[<span class="type">AvroKeyOutputFormat</span>[<span class="type">Person</span>]], conf)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ssc.clearCache()</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">parquet</span></span>(sc: <span class="type">SparkContext</span>, ssc: <span class="type">SQLContext</span>): <span class="type">Unit</span> = &#123;</div><div class="line">    <span class="keyword">val</span> df = ssc.read</div><div class="line">      .format(<span class="string">"com.databricks.spark.avro"</span>)</div><div class="line">      .load(<span class="string">"file:///F:\\datacenter\\output\\env\\avro\\*"</span>)</div><div class="line"></div><div class="line">    <span class="keyword">val</span> struct = <span class="type">StructType</span>(<span class="type">Array</span>(</div><div class="line">      <span class="type">StructField</span>(<span class="string">"row"</span>, <span class="type">StructType</span>(<span class="type">Array</span>(</div><div class="line">        <span class="type">StructField</span>(<span class="string">"id"</span>, <span class="type">StringType</span>, <span class="literal">true</span>),</div><div class="line">        <span class="type">StructField</span>(<span class="string">"name"</span>, <span class="type">StringType</span>, <span class="literal">true</span>),</div><div class="line">        <span class="type">StructField</span>(<span class="string">"sex"</span>, <span class="type">StringType</span>, <span class="literal">true</span>),</div><div class="line">        <span class="type">StructField</span>(<span class="string">"addr"</span>, <span class="type">StringType</span>, <span class="literal">true</span>),</div><div class="line">        <span class="type">StructField</span>(<span class="string">"phone"</span>, <span class="type">StringType</span>, <span class="literal">true</span>))), <span class="literal">true</span>),</div><div class="line">      <span class="type">StructField</span>(<span class="string">"id"</span>, <span class="type">StringType</span>, <span class="literal">true</span>),</div><div class="line">      <span class="type">StructField</span>(<span class="string">"name"</span>, <span class="type">StringType</span>, <span class="literal">true</span>)</div><div class="line">    ))</div><div class="line"></div><div class="line">    <span class="keyword">val</span> df1 = ssc.createDataFrame(df.rdd.map(row =&gt; <span class="type">Row</span>(row, row.getAs(<span class="string">"id"</span>), row.getAs(<span class="string">"name"</span>))), struct)</div><div class="line">    df1.printSchema()</div><div class="line"></div><div class="line">    df1.write</div><div class="line">      .parquet(<span class="string">"file:///F:\\datacenter\\output\\env\\parquet\\"</span> + <span class="type">System</span>.currentTimeMillis())</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="AvroUtils"><a href="#AvroUtils" class="headerlink" title="AvroUtils"></a>AvroUtils</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.apache.avro.<span class="type">Protocol</span>;</div><div class="line"><span class="keyword">import</span> org.apache.avro.<span class="type">Schema</span>;</div><div class="line"><span class="keyword">import</span> java.io.<span class="type">File</span>;</div><div class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</div><div class="line"></div><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">AvroUtils</span> </span>&#123;</div><div class="line">    public static void main(<span class="type">String</span>[] args) &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            protocol2class(<span class="string">"F:\\datacenter\\struct\\avro\\schema\\example.avdl"</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (<span class="type">IOException</span> e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            schema2class(<span class="string">"F:\\datacenter\\struct\\avro\\schema\\person.avsc"</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (<span class="type">IOException</span> e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static void schema2class(<span class="type">String</span> path) <span class="keyword">throws</span> <span class="type">IOException</span> &#123;</div><div class="line">        <span class="type">Schema</span>.<span class="type">Parser</span> parser = <span class="keyword">new</span> <span class="type">Schema</span>.<span class="type">Parser</span>();</div><div class="line">        <span class="type">File</span> src = <span class="keyword">new</span> <span class="type">File</span>(path);</div><div class="line">        <span class="type">Schema</span> schema = parser.parse(src);</div><div class="line">        <span class="type">SpecificCompiler</span> compiler = <span class="keyword">new</span> <span class="type">SpecificCompiler</span>(schema);</div><div class="line">        compiler.compileToDestination(src, <span class="keyword">new</span> <span class="type">File</span>(<span class="string">"F:\\datacenter\\struct\\avro"</span>));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static void protocol2class(<span class="type">String</span> path) <span class="keyword">throws</span> <span class="type">IOException</span> &#123;</div><div class="line">        <span class="type">Schema</span>.<span class="type">Parser</span> parser = <span class="keyword">new</span> <span class="type">Schema</span>.<span class="type">Parser</span>();</div><div class="line">        <span class="type">File</span> src = <span class="keyword">new</span> <span class="type">File</span>(path);</div><div class="line">        <span class="type">Protocol</span> protocol = <span class="type">Protocol</span>.parse(src);</div><div class="line">        <span class="type">SpecificCompiler</span> compiler = <span class="keyword">new</span> <span class="type">SpecificCompiler</span>(protocol);</div><div class="line">        compiler.compileToDestination(src, <span class="keyword">new</span> <span class="type">File</span>(<span class="string">"F:\\datacenter\\struct\\avro"</span>));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="scahme"><a href="#scahme" class="headerlink" title="scahme"></a>scahme</h4><h5 id="avro-schema"><a href="#avro-schema" class="headerlink" title="avro schema"></a>avro schema</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;"namespace": "com.chaosdata",</div><div class="line"> "type": "record",</div><div class="line"> "name": "Person",</div><div class="line"> "fields": [</div><div class="line">    &#123;"name": "id", "type": "string"&#125;,</div><div class="line">    &#123;"name": "name",  "type": "string"&#125;,</div><div class="line">    &#123;"name": "sex",  "type": "string"&#125;,</div><div class="line">    &#123;"name": "addr",  "type": "string"&#125;,</div><div class="line">    &#123;"name": "phone",  "type": "string"&#125;</div><div class="line"> ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Motivation"><a href="#Motivation" class="headerlink" title="Motivation"></a>Motivation</h2><p>We created Parquet to make the advantages of compressed, efficient columnar data representation available to any project in the Hadoop ecosystem.</p>
<p>Parquet is built from the ground up with complex nested data structures in mind, and uses the <a href="https://github.com/Parquet/parquet-mr/wiki/The-striping-and-assembly-algorithms-from-the-Dremel-paper" target="_blank" rel="external">record shredding and assembly algorithm</a> described in the Dremel paper. We believe this approach is superior to simple flattening of nested name spaces.</p>
<p>Parquet is built to support very efficient compression and encoding schemes. Multiple projects have demonstrated the performance impact of applying the right compression and encoding scheme to the data. Parquet allows compression schemes to be specified on a per-column level, and is future-proofed to allow adding more encodings as they are invented and implemented.</p>
<p>Parquet is built to be used by anyone. The Hadoop ecosystem is rich with data processing frameworks, and we are not interested in playing favorites. We believe that an efficient, well-implemented columnar storage substrate should be useful to all frameworks without the cost of extensive and difficult to set up dependencies.</p>
<h2 id="Modules"><a href="#Modules" class="headerlink" title="Modules"></a>Modules</h2><p>The <code>parquet-format</code> project contains format specifications and Thrift definitions of metadata required to properly read Parquet files.</p>
<p>The <code>parquet-mr</code> project contains multiple sub-modules, which implement the core components of reading and writing a nested, column-oriented data stream, map this core onto the parquet format, and provide Hadoop Input/Output Formats, Pig loaders, and other java-based utilities for interacting with Parquet.</p>
<p>The <code>parquet-compatibility</code> project contains compatibility tests that can be used to verify that implementations in different languages can read and write each other’s files.</p>
<h2 id="Building"><a href="#Building" class="headerlink" title="Building"></a>Building</h2><p>Java resources can be build using <code>mvn package</code>. The current stable version should always be available from Maven Central.</p>
<p>C++ thrift resources can be generated via make.</p>
<p>Thrift can be also code-genned into any other thrift-supported language.</p>
<h2 id="Glossary"><a href="#Glossary" class="headerlink" title="Glossary"></a>Glossary</h2><ul>
<li><p>Block (HDFS block): This means a block in HDFS and the meaning is<br>unchanged for describing this file format.  The file format is<br>designed to work well on top of HDFS.</p>
</li>
<li><p>File: A HDFS file that must include the metadata for the file.<br>It does not need to actually contain the data.</p>
</li>
<li><p>Row group: A logical horizontal partitioning of the data into rows.<br>There is no physical structure that is guaranteed for a row group.<br>A row group consists of a column chunk for each column in the dataset.</p>
</li>
<li><p>Column chunk: A chunk of the data for a particular column.  They live<br>in a particular row group and are guaranteed to be contiguous in the file.</p>
</li>
<li><p>Page: Column chunks are divided up into pages.  A page is conceptually<br>an indivisible unit (in terms of compression and encoding).  There can<br>be multiple page types which are interleaved in a column chunk.</p>
</li>
</ul>
<p>Hierarchically, a file consists of one or more row groups.  A row group<br>contains exactly one column chunk per column.  Column chunks contain one or<br>more pages.</p>
<h2 id="Unit-of-parallelization"><a href="#Unit-of-parallelization" class="headerlink" title="Unit of parallelization"></a>Unit of parallelization</h2><ul>
<li>MapReduce - File/Row Group</li>
<li>IO - Column chunk</li>
<li>Encoding/Compression - Page</li>
</ul>
<h2 id="File-format"><a href="#File-format" class="headerlink" title="File format"></a>File format</h2><p>This file and the <a href="#parquet.thrift">thrift definition</a> should be read together to understand the format.</p>
<pre><code>4-byte magic number &quot;PAR1&quot;
&lt;Column 1 Chunk 1 + Column Metadata&gt;
&lt;Column 2 Chunk 1 + Column Metadata&gt;
...
&lt;Column N Chunk 1 + Column Metadata&gt;
&lt;Column 1 Chunk 2 + Column Metadata&gt;
&lt;Column 2 Chunk 2 + Column Metadata&gt;
...
&lt;Column N Chunk 2 + Column Metadata&gt;
...
&lt;Column 1 Chunk M + Column Metadata&gt;
&lt;Column 2 Chunk M + Column Metadata&gt;
...
&lt;Column N Chunk M + Column Metadata&gt;
File Metadata
4-byte length in bytes of file metadata (little endian)
4-byte magic number &quot;PAR1&quot;
</code></pre><p>In the above example, there are N columns in this table, split into M row<br>groups.  The file metadata contains the locations of all the column metadata<br>start locations.  More details on what is contained in the metadata can be found<br>in the thrift definition.</p>
<p>Metadata is written after the data to allow for single pass writing.</p>
<p>Readers are expected to first read the file metadata to find all the column<br>chunks they are interested in.  The columns chunks should then be read sequentially.</p>
<p> <img src="https://raw.github.com/Parquet/parquet-format/master/doc/images/FileLayout.gif" alt="File Layout"></p>
<h2 id="Metadata"><a href="#Metadata" class="headerlink" title="Metadata"></a>Metadata</h2><p>There are three types of metadata: file metadata, column (chunk) metadata and page<br>header metadata.  All thrift structures are serialized using the TCompactProtocol.</p>
<p> <img src="https://github.com/Parquet/parquet-format/raw/master/doc/images/FileFormat.gif" alt="Metadata diagram"></p>
<h2 id="Types"><a href="#Types" class="headerlink" title="Types"></a>Types</h2><p>The types supported by the file format are intended to be as minimal as possible,<br>with a focus on how the types effect on disk storage.  For example, 16-bit ints<br>are not explicitly supported in the storage format since they are covered by<br>32-bit ints with an efficient encoding.  This reduces the complexity of implementing<br>readers and writers for the format.  The types are:</p>
<ul>
<li>BOOLEAN: 1 bit boolean</li>
<li>INT32: 32 bit signed ints</li>
<li>INT64: 64 bit signed ints</li>
<li>INT96: 96 bit signed ints</li>
<li>FLOAT: IEEE 32-bit floating point values</li>
<li>DOUBLE: IEEE 64-bit floating point values</li>
<li>BYTE_ARRAY: arbitrarily long byte arrays.</li>
</ul>
<h3 id="Logical-Types"><a href="#Logical-Types" class="headerlink" title="Logical Types"></a>Logical Types</h3><p>Logical types are used to extend the types that parquet can be used to store,<br>by specifying how the primitive types should be interpreted. This keeps the set<br>of primitive types to a minimum and reuses parquet’s efficient encodings. For<br>example, strings are stored as byte arrays (binary) with a UTF8 annotation.<br>These annotations define how to further decode and interpret the data.<br>Annotations are stored as <code>ConvertedType</code> fields in the file metadata and are<br>documented in<br><a href="#logic.type">LogicalTypes.md</a></p>
<h2 id="Nested-Encoding"><a href="#Nested-Encoding" class="headerlink" title="Nested Encoding"></a>Nested Encoding</h2><p>To encode nested columns, Parquet uses the Dremel encoding with definition and<br>repetition levels.  Definition levels specify how many optional fields in the<br>path for the column are defined.  Repetition levels specify at what repeated field<br>in the path has the value repeated.  The max definition and repetition levels can<br>be computed from the schema (i.e. how much nesting there is).  This defines the<br>maximum number of bits required to store the levels (levels are defined for all<br>values in the column).</p>
<p>Two encodings for the levels are supported BIT_PACKED and RLE. Only RLE is now used as it supersedes BIT_PACKED.</p>
<h2 id="Nulls"><a href="#Nulls" class="headerlink" title="Nulls"></a>Nulls</h2><p>Nullity is encoded in the definition levels (which is run-length encoded).  NULL values<br>are not encoded in the data.  For example, in a non-nested schema, a column with 1000 NULLs<br>would be encoded with run-length encoding (0, 1000 times) for the definition levels and<br>nothing else.</p>
<h2 id="Data-Pages"><a href="#Data-Pages" class="headerlink" title="Data Pages"></a>Data Pages</h2><p>For data pages, the 3 pieces of information are encoded back to back, after the page<br>header.  We have the</p>
<ul>
<li>repetition levels data,</li>
<li>definition levels data,</li>
<li>encoded values.</li>
</ul>
<p>The value of <code>uncompressed_page_size</code> specified in the header is for all 3 pieces combined.</p>
<p>The data for the data page is always required.  The definition and repetition levels<br>are optional, based on the schema definition.  If the column is not nested (i.e.<br>the path to the column has length 1), we do not encode the repetition levels (it would<br>always have the value 1).  For data that is required, the definition levels are<br>skipped (if encoded, it will always have the value of the max definition level).</p>
<p>For example, in the case where the column is non-nested and required, the data in the<br>page is only the encoded values.</p>
<p>The supported encodings are described in <a href="https://github.com/Parquet/parquet-format/blob/master/Encodings.md" target="_blank" rel="external">Encodings.md</a></p>
<h2 id="Column-chunks"><a href="#Column-chunks" class="headerlink" title="Column chunks"></a>Column chunks</h2><p>Column chunks are composed of pages written back to back.  The pages share a common<br>header and readers can skip over pages they are not interested in.  The data for the<br>page follows the header and can be compressed and/or encoded.  The compression and<br>encoding is specified in the page metadata.</p>
<h2 id="Checksumming"><a href="#Checksumming" class="headerlink" title="Checksumming"></a>Checksumming</h2><p>Data pages can be individually checksummed.  This allows disabling of checksums at the<br>HDFS file level, to better support single row lookups.</p>
<h2 id="Error-recovery"><a href="#Error-recovery" class="headerlink" title="Error recovery"></a>Error recovery</h2><p>If the file metadata is corrupt, the file is lost.  If the column metadata is corrupt,<br>that column chunk is lost (but column chunks for this column in other row groups are<br>okay).  If a page header is corrupt, the remaining pages in that chunk are lost.  If<br>the data within a page is corrupt, that page is lost.  The file will be more<br>resilient to corruption with smaller row groups.</p>
<p>Potential extension: With smaller row groups, the biggest issue is placing the file<br>metadata at the end.  If an error happens while writing the file metadata, all the<br>data written will be unreadable.  This can be fixed by writing the file metadata<br>every Nth row group.<br>Each file metadata would be cumulative and include all the row groups written so<br>far.  Combining this with the strategy used for rc or avro files using sync markers,<br>a reader could recover partially written files.</p>
<h2 id="Separating-metadata-and-column-data"><a href="#Separating-metadata-and-column-data" class="headerlink" title="Separating metadata and column data."></a>Separating metadata and column data.</h2><p>The format is explicitly designed to separate the metadata from the data.  This<br>allows splitting columns into multiple files, as well as having a single metadata<br>file reference multiple parquet files.</p>
<h2 id="Configurations"><a href="#Configurations" class="headerlink" title="Configurations"></a>Configurations</h2><ul>
<li>Row group size: Larger row groups allow for larger column chunks which makes it<br>possible to do larger sequential IO.  Larger groups also require more buffering in<br>the write path (or a two pass write).  We recommend large row groups (512MB - 1GB).<br>Since an entire row group might need to be read, we want it to completely fit on<br>one HDFS block.  Therefore, HDFS block sizes should also be set to be larger.  An<br>optimized read setup would be: 1GB row groups, 1GB HDFS block size, 1 HDFS block<br>per HDFS file.</li>
<li>Data page size: Data pages should be considered indivisible so smaller data pages<br>allow for more fine grained reading (e.g. single row lookup).  Larger page sizes<br>incur less space overhead (less page headers) and potentially less parsing overhead<br>(processing headers).  Note: for sequential scans, it is not expected to read a page<br>at a time; this is not the IO chunk.  We recommend 8KB for page sizes.</li>
</ul>
<h2 id="Extensibility"><a href="#Extensibility" class="headerlink" title="Extensibility"></a>Extensibility</h2><p>There are many places in the format for compatible extensions:</p>
<ul>
<li>File Version: The file metadata contains a version.</li>
<li>Encodings: Encodings are specified by enum and more can be added in the future.</li>
<li>Page types: Additional page types can be added and safely skipped.</li>
</ul>
<p><span id="parquet.thrift">parquet.thrift：</span><br><figure class="highlight thrift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * File format description for the parquet file format</div><div class="line"> */</div><div class="line"><span class="keyword">namespace</span> cpp parquet</div><div class="line"><span class="keyword">namespace</span> java org.apache.parquet.format</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Types supported by Parquet.  These types are intended to be used in combination</div><div class="line"> * with the encodings to control the on disk storage format.</div><div class="line"> * For example INT16 is not included as a type since a good encoding of INT32</div><div class="line"> * would handle this.</div><div class="line"> *</div><div class="line"> * When a logical type is not present, the type-defined sort order of these</div><div class="line"> * physical types are:</div><div class="line"> * * BOOLEAN - false, true</div><div class="line"> * * INT32 - signed comparison</div><div class="line"> * * INT64 - signed comparison</div><div class="line"> * * INT96 - signed comparison</div><div class="line"> * * FLOAT - signed comparison</div><div class="line"> * * DOUBLE - signed comparison</div><div class="line"> * * BYTE_ARRAY - unsigned byte-wise comparison</div><div class="line"> * * FIXED_LEN_BYTE_ARRAY - unsigned byte-wise comparison</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Type</span> </span>&#123;</div><div class="line">  BOOLEAN = <span class="number">0</span>;</div><div class="line">  INT32 = <span class="number">1</span>;</div><div class="line">  INT64 = <span class="number">2</span>;</div><div class="line">  INT96 = <span class="number">3</span>;</div><div class="line">  FLOAT = <span class="number">4</span>;</div><div class="line">  DOUBLE = <span class="number">5</span>;</div><div class="line">  BYTE_ARRAY = <span class="number">6</span>;</div><div class="line">  FIXED_LEN_BYTE_ARRAY = <span class="number">7</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Common types used by frameworks(e.g. hive, pig) using parquet.  This helps map</div><div class="line"> * between types in those frameworks to the base types in parquet.  This is only</div><div class="line"> * metadata and not needed to read or write the data.</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">enum</span> <span class="title">ConvertedType</span> </span>&#123;</div><div class="line">  <span class="comment">/** a BYTE_ARRAY actually contains UTF8 encoded chars */</span></div><div class="line">  UTF8 = <span class="number">0</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** a map is converted as an optional field containing a repeated key/value pair */</span></div><div class="line">  MAP = <span class="number">1</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** a key/value pair is converted into a group of two fields */</span></div><div class="line">  MAP_KEY_VALUE = <span class="number">2</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** a list is converted into an optional field containing a repeated field for its</span></div><div class="line">   * values */</div><div class="line">  LIST = <span class="number">3</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** an enum is converted into a binary field */</span></div><div class="line">  ENUM = <span class="number">4</span>;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * A decimal value.</div><div class="line">   *</div><div class="line">   * This may be used to annotate binary or fixed primitive types. The</div><div class="line">   * underlying byte array stores the unscaled value encoded as two's</div><div class="line">   * complement using big-endian byte order (the most significant byte is the</div><div class="line">   * zeroth element). The value of the decimal is the value * 10^&#123;-scale&#125;.</div><div class="line">   *</div><div class="line">   * This must be accompanied by a (maximum) precision and a scale in the</div><div class="line">   * SchemaElement. The precision specifies the number of digits in the decimal</div><div class="line">   * and the scale stores the location of the decimal point. For example 1.23</div><div class="line">   * would have precision 3 (3 total digits) and scale 2 (the decimal point is</div><div class="line">   * 2 digits over).</div><div class="line">   */</div><div class="line">  DECIMAL = <span class="number">5</span>;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * A Date</div><div class="line">   *</div><div class="line">   * Stored as days since Unix epoch, encoded as the INT32 physical type.</div><div class="line">   *</div><div class="line">   */</div><div class="line">  DATE = <span class="number">6</span>;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * A time</div><div class="line">   *</div><div class="line">   * The total number of milliseconds since midnight.  The value is stored</div><div class="line">   * as an INT32 physical type.</div><div class="line">   */</div><div class="line">  TIME_MILLIS = <span class="number">7</span>;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * A time.</div><div class="line">   *</div><div class="line">   * The total number of microseconds since midnight.  The value is stored as</div><div class="line">   * an INT64 physical type.</div><div class="line">   */</div><div class="line">  TIME_MICROS = <span class="number">8</span>;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * A date/time combination</div><div class="line">   *</div><div class="line">   * Date and time recorded as milliseconds since the Unix epoch.  Recorded as</div><div class="line">   * a physical type of INT64.</div><div class="line">   */</div><div class="line">  TIMESTAMP_MILLIS = <span class="number">9</span>;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * A date/time combination</div><div class="line">   *</div><div class="line">   * Date and time recorded as microseconds since the Unix epoch.  The value is</div><div class="line">   * stored as an INT64 physical type.</div><div class="line">   */</div><div class="line">  TIMESTAMP_MICROS = <span class="number">10</span>;</div><div class="line"></div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * An unsigned integer value.</div><div class="line">   *</div><div class="line">   * The number describes the maximum number of meainful data bits in</div><div class="line">   * the stored value. 8, 16 and 32 bit values are stored using the</div><div class="line">   * INT32 physical type.  64 bit values are stored using the INT64</div><div class="line">   * physical type.</div><div class="line">   *</div><div class="line">   */</div><div class="line">  UINT_8 = <span class="number">11</span>;</div><div class="line">  UINT_16 = <span class="number">12</span>;</div><div class="line">  UINT_32 = <span class="number">13</span>;</div><div class="line">  UINT_64 = <span class="number">14</span>;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * A signed integer value.</div><div class="line">   *</div><div class="line">   * The number describes the maximum number of meainful data bits in</div><div class="line">   * the stored value. 8, 16 and 32 bit values are stored using the</div><div class="line">   * INT32 physical type.  64 bit values are stored using the INT64</div><div class="line">   * physical type.</div><div class="line">   *</div><div class="line">   */</div><div class="line">  INT_8 = <span class="number">15</span>;</div><div class="line">  INT_16 = <span class="number">16</span>;</div><div class="line">  INT_32 = <span class="number">17</span>;</div><div class="line">  INT_64 = <span class="number">18</span>;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * An embedded JSON document</div><div class="line">   *</div><div class="line">   * A JSON document embedded within a single UTF8 column.</div><div class="line">   */</div><div class="line">  JSON = <span class="number">19</span>;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * An embedded BSON document</div><div class="line">   *</div><div class="line">   * A BSON document embedded within a single BINARY column.</div><div class="line">   */</div><div class="line">  BSON = <span class="number">20</span>;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * An interval of time</div><div class="line">   *</div><div class="line">   * This type annotates data stored as a FIXED_LEN_BYTE_ARRAY of length 12</div><div class="line">   * This data is composed of three separate little endian unsigned</div><div class="line">   * integers.  Each stores a component of a duration of time.  The first</div><div class="line">   * integer identifies the number of months associated with the duration,</div><div class="line">   * the second identifies the number of days associated with the duration</div><div class="line">   * and the third identifies the number of milliseconds associated with</div><div class="line">   * the provided duration.  This duration of time is independent of any</div><div class="line">   * particular timezone or date.</div><div class="line">   */</div><div class="line">  INTERVAL = <span class="number">21</span>;</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * Annotates a column that is always null</div><div class="line">   * Sometimes when discovering the schema of existing data</div><div class="line">   * values are always null</div><div class="line">   */</div><div class="line">  NULL = <span class="number">25</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Representation of Schemas</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">enum</span> <span class="title">FieldRepetitionType</span> </span>&#123;</div><div class="line">  <span class="comment">/** This field is required (can not be null) and each record has exactly 1 value. */</span></div><div class="line">  REQUIRED = <span class="number">0</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** The field is optional (can be null) and each record has 0 or 1 values. */</span></div><div class="line">  OPTIONAL = <span class="number">1</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** The field is repeated and can contain 0 or more values */</span></div><div class="line">  REPEATED = <span class="number">2</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Statistics per row group and per page</div><div class="line"> * All fields are optional.</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Statistics</span> </span>&#123;</div><div class="line">   <span class="comment">/**</span></div><div class="line">    * DEPRECATED: min and max value of the column. Use min_value and max_value.</div><div class="line">    *</div><div class="line">    * Values are encoded using PLAIN encoding, except that variable-length byte</div><div class="line">    * arrays do not include a length prefix.</div><div class="line">    *</div><div class="line">    * These fields encode min and max values determined by SIGNED comparison</div><div class="line">    * only. New files should use the correct order for a column's logical type</div><div class="line">    * and store the values in the min_value and max_value fields.</div><div class="line">    *</div><div class="line">    * To support older readers, these may be set when the column order is</div><div class="line">    * SIGNED.</div><div class="line">    */</div><div class="line">   <span class="number">1</span>: <span class="keyword">optional</span> <span class="built_in">binary</span> max;</div><div class="line">   <span class="number">2</span>: <span class="keyword">optional</span> <span class="built_in">binary</span> min;</div><div class="line">   <span class="comment">/** count of null value in the column */</span></div><div class="line">   <span class="number">3</span>: <span class="keyword">optional</span> <span class="built_in">i64</span> null_count;</div><div class="line">   <span class="comment">/** count of distinct values occurring */</span></div><div class="line">   <span class="number">4</span>: <span class="keyword">optional</span> <span class="built_in">i64</span> distinct_count;</div><div class="line">   <span class="comment">/**</span></div><div class="line">    * Min and max values for the column, determined by its ColumnOrder.</div><div class="line">    *</div><div class="line">    * Values are encoded using PLAIN encoding, except that variable-length byte</div><div class="line">    * arrays do not include a length prefix.</div><div class="line">    */</div><div class="line">   <span class="number">5</span>: <span class="keyword">optional</span> <span class="built_in">binary</span> max_value;</div><div class="line">   <span class="number">6</span>: <span class="keyword">optional</span> <span class="built_in">binary</span> min_value;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Represents a element inside a schema definition.</div><div class="line"> *  - if it is a group (inner node) then type is undefined and num_children is defined</div><div class="line"> *  - if it is a primitive type (leaf) then type is defined and num_children is undefined</div><div class="line"> * the nodes are listed in depth first traversal order.</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SchemaElement</span> </span>&#123;</div><div class="line">  <span class="comment">/** Data type for this field. Not set if the current element is a non-leaf node */</span></div><div class="line">  <span class="number">1</span>: <span class="keyword">optional</span> Type type;</div><div class="line"></div><div class="line">  <span class="comment">/** If type is FIXED_LEN_BYTE_ARRAY, this is the byte length of the vales.</span></div><div class="line">   * Otherwise, if specified, this is the maximum bit length to store any of the values.</div><div class="line">   * (e.g. a low cardinality INT col could have this set to 3).  Note that this is</div><div class="line">   * in the schema, and therefore fixed for the entire file.</div><div class="line">   */</div><div class="line">  <span class="number">2</span>: <span class="keyword">optional</span> <span class="built_in">i32</span> type_length;</div><div class="line"></div><div class="line">  <span class="comment">/** repetition of the field. The root of the schema does not have a repetition_type.</span></div><div class="line">   * All other nodes must have one */</div><div class="line">  <span class="number">3</span>: <span class="keyword">optional</span> FieldRepetitionType repetition_type;</div><div class="line"></div><div class="line">  <span class="comment">/** Name of the field in the schema */</span></div><div class="line">  <span class="number">4</span>: <span class="keyword">required</span> <span class="built_in">string</span> name;</div><div class="line"></div><div class="line">  <span class="comment">/** Nested fields.  Since thrift does not support nested fields,</span></div><div class="line">   * the nesting is flattened to a single list by a depth-first traversal.</div><div class="line">   * The children count is used to construct the nested relationship.</div><div class="line">   * This field is not set when the element is a primitive type</div><div class="line">   */</div><div class="line">  <span class="number">5</span>: <span class="keyword">optional</span> <span class="built_in">i32</span> num_children;</div><div class="line"></div><div class="line">  <span class="comment">/** When the schema is the result of a conversion from another model</span></div><div class="line">   * Used to record the original type to help with cross conversion.</div><div class="line">   */</div><div class="line">  <span class="number">6</span>: <span class="keyword">optional</span> ConvertedType converted_type;</div><div class="line"></div><div class="line">  <span class="comment">/** Used when this column contains decimal data.</span></div><div class="line">   * See the DECIMAL converted type for more details.</div><div class="line">   */</div><div class="line">  <span class="number">7</span>: <span class="keyword">optional</span> <span class="built_in">i32</span> scale</div><div class="line">  <span class="number">8</span>: <span class="keyword">optional</span> <span class="built_in">i32</span> precision</div><div class="line"></div><div class="line">  <span class="comment">/** When the original schema supports field ids, this will save the</span></div><div class="line">   * original field id in the parquet schema</div><div class="line">   */</div><div class="line">  <span class="number">9</span>: <span class="keyword">optional</span> <span class="built_in">i32</span> field_id;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Encodings supported by Parquet.  Not all encodings are valid for all types.  These</div><div class="line"> * enums are also used to specify the encoding of definition and repetition levels.</div><div class="line"> * See the accompanying doc for the details of the more complicated encodings.</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Encoding</span> </span>&#123;</div><div class="line">  <span class="comment">/** Default encoding.</span></div><div class="line">   * BOOLEAN - 1 bit per value. 0 is false; 1 is true.</div><div class="line">   * INT32 - 4 bytes per value.  Stored as little-endian.</div><div class="line">   * INT64 - 8 bytes per value.  Stored as little-endian.</div><div class="line">   * FLOAT - 4 bytes per value.  IEEE. Stored as little-endian.</div><div class="line">   * DOUBLE - 8 bytes per value.  IEEE. Stored as little-endian.</div><div class="line">   * BYTE_ARRAY - 4 byte length stored as little endian, followed by bytes.</div><div class="line">   * FIXED_LEN_BYTE_ARRAY - Just the bytes.</div><div class="line">   */</div><div class="line">  PLAIN = <span class="number">0</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** Group VarInt encoding for INT32/INT64.</span></div><div class="line">   * This encoding is deprecated. It was never used</div><div class="line">   */</div><div class="line">  <span class="comment">//  GROUP_VAR_INT = 1;</span></div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * Deprecated: Dictionary encoding. The values in the dictionary are encoded in the</div><div class="line">   * plain type.</div><div class="line">   * in a data page use RLE_DICTIONARY instead.</div><div class="line">   * in a Dictionary page use PLAIN instead</div><div class="line">   */</div><div class="line">  PLAIN_DICTIONARY = <span class="number">2</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** Group packed run length encoding. Usable for definition/reptition levels</span></div><div class="line">   * encoding and Booleans (on one bit: 0 is false; 1 is true.)</div><div class="line">   */</div><div class="line">  RLE = <span class="number">3</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** Bit packed encoding.  This can only be used if the data has a known max</span></div><div class="line">   * width.  Usable for definition/repetition levels encoding.</div><div class="line">   */</div><div class="line">  BIT_PACKED = <span class="number">4</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** Delta encoding for integers. This can be used for int columns and works best</span></div><div class="line">   * on sorted data</div><div class="line">   */</div><div class="line">  DELTA_BINARY_PACKED = <span class="number">5</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** Encoding for byte arrays to separate the length values and the data. The lengths</span></div><div class="line">   * are encoded using DELTA_BINARY_PACKED</div><div class="line">   */</div><div class="line">  DELTA_LENGTH_BYTE_ARRAY = <span class="number">6</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** Incremental-encoded byte array. Prefix lengths are encoded using DELTA_BINARY_PACKED.</span></div><div class="line">   * Suffixes are stored as delta length byte arrays.</div><div class="line">   */</div><div class="line">  DELTA_BYTE_ARRAY = <span class="number">7</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** Dictionary encoding: the ids are encoded using the RLE encoding</span></div><div class="line">   */</div><div class="line">  RLE_DICTIONARY = <span class="number">8</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Supported compression algorithms.</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">enum</span> <span class="title">CompressionCodec</span> </span>&#123;</div><div class="line">  UNCOMPRESSED = <span class="number">0</span>;</div><div class="line">  SNAPPY = <span class="number">1</span>;</div><div class="line">  GZIP = <span class="number">2</span>;</div><div class="line">  LZO = <span class="number">3</span>;</div><div class="line">  BROTLI = <span class="number">4</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">enum</span> <span class="title">PageType</span> </span>&#123;</div><div class="line">  DATA_PAGE = <span class="number">0</span>;</div><div class="line">  INDEX_PAGE = <span class="number">1</span>;</div><div class="line">  DICTIONARY_PAGE = <span class="number">2</span>;</div><div class="line">  DATA_PAGE_V2 = <span class="number">3</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/** Data page header */</span></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">DataPageHeader</span> </span>&#123;</div><div class="line">  <span class="comment">/** Number of values, including NULLs, in this data page. **/</span></div><div class="line">  <span class="number">1</span>: <span class="keyword">required</span> <span class="built_in">i32</span> num_values</div><div class="line"></div><div class="line">  <span class="comment">/** Encoding used for this data page **/</span></div><div class="line">  <span class="number">2</span>: <span class="keyword">required</span> Encoding encoding</div><div class="line"></div><div class="line">  <span class="comment">/** Encoding used for definition levels **/</span></div><div class="line">  <span class="number">3</span>: <span class="keyword">required</span> Encoding definition_level_encoding;</div><div class="line"></div><div class="line">  <span class="comment">/** Encoding used for repetition levels **/</span></div><div class="line">  <span class="number">4</span>: <span class="keyword">required</span> Encoding repetition_level_encoding;</div><div class="line"></div><div class="line">  <span class="comment">/** Optional statistics for the data in this page**/</span></div><div class="line">  <span class="number">5</span>: <span class="keyword">optional</span> Statistics statistics;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">IndexPageHeader</span> </span>&#123;</div><div class="line">  <span class="comment">/** <span class="doctag">TODO:</span> **/</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">DictionaryPageHeader</span> </span>&#123;</div><div class="line">  <span class="comment">/** Number of values in the dictionary **/</span></div><div class="line">  <span class="number">1</span>: <span class="keyword">required</span> <span class="built_in">i32</span> num_values;</div><div class="line"></div><div class="line">  <span class="comment">/** Encoding using this dictionary page **/</span></div><div class="line">  <span class="number">2</span>: <span class="keyword">required</span> Encoding encoding</div><div class="line"></div><div class="line">  <span class="comment">/** If true, the entries in the dictionary are sorted in ascending order **/</span></div><div class="line">  <span class="number">3</span>: <span class="keyword">optional</span> <span class="built_in">bool</span> is_sorted;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * New page format alowing reading levels without decompressing the data</div><div class="line"> * Repetition and definition levels are uncompressed</div><div class="line"> * The remaining section containing the data is compressed if is_compressed is true</div><div class="line"> **/</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">DataPageHeaderV2</span> </span>&#123;</div><div class="line">  <span class="comment">/** Number of values, including NULLs, in this data page. **/</span></div><div class="line">  <span class="number">1</span>: <span class="keyword">required</span> <span class="built_in">i32</span> num_values</div><div class="line">  <span class="comment">/** Number of NULL values, in this data page.</span></div><div class="line">      Number of non-null = num_values - num_nulls which is also the number of values in the data section **/</div><div class="line">  <span class="number">2</span>: <span class="keyword">required</span> <span class="built_in">i32</span> num_nulls</div><div class="line">  <span class="comment">/** Number of rows in this data page. which means pages change on record boundaries (r = 0) **/</span></div><div class="line">  <span class="number">3</span>: <span class="keyword">required</span> <span class="built_in">i32</span> num_rows</div><div class="line">  <span class="comment">/** Encoding used for data in this page **/</span></div><div class="line">  <span class="number">4</span>: <span class="keyword">required</span> Encoding encoding</div><div class="line"></div><div class="line">  <span class="comment">// repetition levels and definition levels are always using RLE (without size in it)</span></div><div class="line"></div><div class="line">  <span class="comment">/** length of the repetition levels */</span></div><div class="line">  <span class="number">5</span>: <span class="keyword">required</span> <span class="built_in">i32</span> definition_levels_byte_length;</div><div class="line">  <span class="comment">/** length of the definition levels */</span></div><div class="line">  <span class="number">6</span>: <span class="keyword">required</span> <span class="built_in">i32</span> repetition_levels_byte_length;</div><div class="line"></div><div class="line">  <span class="comment">/**  whether the values are compressed.</span></div><div class="line">  Which means the section of the page between</div><div class="line">  definition_levels_byte_length + repetition_levels_byte_length + 1 and compressed_page_size (included)</div><div class="line">  is compressed with the compression_codec.</div><div class="line">  If missing it is considered compressed */</div><div class="line">  <span class="number">7</span>: <span class="keyword">optional</span> <span class="built_in">bool</span> is_compressed = <span class="number">1</span>;</div><div class="line"></div><div class="line">  <span class="comment">/** optional statistics for this column chunk */</span></div><div class="line">  <span class="number">8</span>: <span class="keyword">optional</span> Statistics statistics;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PageHeader</span> </span>&#123;</div><div class="line">  <span class="comment">/** the type of the page: indicates which of the *_header fields is set **/</span></div><div class="line">  <span class="number">1</span>: <span class="keyword">required</span> PageType type</div><div class="line"></div><div class="line">  <span class="comment">/** Uncompressed page size in bytes (not including this header) **/</span></div><div class="line">  <span class="number">2</span>: <span class="keyword">required</span> <span class="built_in">i32</span> uncompressed_page_size</div><div class="line"></div><div class="line">  <span class="comment">/** Compressed page size in bytes (not including this header) **/</span></div><div class="line">  <span class="number">3</span>: <span class="keyword">required</span> <span class="built_in">i32</span> compressed_page_size</div><div class="line"></div><div class="line">  <span class="comment">/** 32bit crc for the data below. This allows for disabling checksumming in HDFS</span></div><div class="line">   *  if only a few pages needs to be read</div><div class="line">   **/</div><div class="line">  <span class="number">4</span>: <span class="keyword">optional</span> <span class="built_in">i32</span> crc</div><div class="line"></div><div class="line">  <span class="comment">// Headers for page specific data.  One only will be set.</span></div><div class="line">  <span class="number">5</span>: <span class="keyword">optional</span> DataPageHeader data_page_header;</div><div class="line">  <span class="number">6</span>: <span class="keyword">optional</span> IndexPageHeader index_page_header;</div><div class="line">  <span class="number">7</span>: <span class="keyword">optional</span> DictionaryPageHeader dictionary_page_header;</div><div class="line">  <span class="number">8</span>: <span class="keyword">optional</span> DataPageHeaderV2 data_page_header_v2;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Wrapper struct to store key values</div><div class="line"> */</div><div class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">KeyValue</span> </span>&#123;</div><div class="line">  <span class="number">1</span>: <span class="keyword">required</span> <span class="built_in">string</span> key</div><div class="line">  <span class="number">2</span>: <span class="keyword">optional</span> <span class="built_in">string</span> value</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Wrapper struct to specify sort order</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SortingColumn</span> </span>&#123;</div><div class="line">  <span class="comment">/** The column index (in this row group) **/</span></div><div class="line">  <span class="number">1</span>: <span class="keyword">required</span> <span class="built_in">i32</span> column_idx</div><div class="line"></div><div class="line">  <span class="comment">/** If true, indicates this column is sorted in descending order. **/</span></div><div class="line">  <span class="number">2</span>: <span class="keyword">required</span> <span class="built_in">bool</span> descending</div><div class="line"></div><div class="line">  <span class="comment">/** If true, nulls will come before non-null values, otherwise,</span></div><div class="line">   * nulls go at the end. */</div><div class="line">  <span class="number">3</span>: <span class="keyword">required</span> <span class="built_in">bool</span> nulls_first</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * statistics of a given page type and encoding</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PageEncodingStats</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="comment">/** the page type (data/dic/...) **/</span></div><div class="line">  <span class="number">1</span>: <span class="keyword">required</span> PageType page_type;</div><div class="line"></div><div class="line">  <span class="comment">/** encoding of the page **/</span></div><div class="line">  <span class="number">2</span>: <span class="keyword">required</span> Encoding encoding;</div><div class="line"></div><div class="line">  <span class="comment">/** number of pages of this type with this encoding **/</span></div><div class="line">  <span class="number">3</span>: <span class="keyword">required</span> <span class="built_in">i32</span> count;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Description for column metadata</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ColumnMetaData</span> </span>&#123;</div><div class="line">  <span class="comment">/** Type of this column **/</span></div><div class="line">  <span class="number">1</span>: <span class="keyword">required</span> Type type</div><div class="line"></div><div class="line">  <span class="comment">/** Set of all encodings used for this column. The purpose is to validate</span></div><div class="line">   * whether we can decode those pages. **/</div><div class="line">  <span class="number">2</span>: <span class="keyword">required</span> list&lt;Encoding&gt; encodings</div><div class="line"></div><div class="line">  <span class="comment">/** Path in schema **/</span></div><div class="line">  <span class="number">3</span>: <span class="keyword">required</span> list&lt;<span class="keyword">string</span>&gt; path_in_schema</div><div class="line"></div><div class="line">  <span class="comment">/** Compression codec **/</span></div><div class="line">  <span class="number">4</span>: <span class="keyword">required</span> CompressionCodec codec</div><div class="line"></div><div class="line">  <span class="comment">/** Number of values in this column **/</span></div><div class="line">  <span class="number">5</span>: <span class="keyword">required</span> <span class="built_in">i64</span> num_values</div><div class="line"></div><div class="line">  <span class="comment">/** total byte size of all uncompressed pages in this column chunk (including the headers) **/</span></div><div class="line">  <span class="number">6</span>: <span class="keyword">required</span> <span class="built_in">i64</span> total_uncompressed_size</div><div class="line"></div><div class="line">  <span class="comment">/** total byte size of all compressed pages in this column chunk (including the headers) **/</span></div><div class="line">  <span class="number">7</span>: <span class="keyword">required</span> <span class="built_in">i64</span> total_compressed_size</div><div class="line"></div><div class="line">  <span class="comment">/** Optional key/value metadata **/</span></div><div class="line">  <span class="number">8</span>: <span class="keyword">optional</span> list&lt;KeyValue&gt; key_value_metadata</div><div class="line"></div><div class="line">  <span class="comment">/** Byte offset from beginning of file to first data page **/</span></div><div class="line">  <span class="number">9</span>: <span class="keyword">required</span> <span class="built_in">i64</span> data_page_offset</div><div class="line"></div><div class="line">  <span class="comment">/** Byte offset from beginning of file to root index page **/</span></div><div class="line">  <span class="number">10</span>: <span class="keyword">optional</span> <span class="built_in">i64</span> index_page_offset</div><div class="line"></div><div class="line">  <span class="comment">/** Byte offset from the beginning of file to first (only) dictionary page **/</span></div><div class="line">  <span class="number">11</span>: <span class="keyword">optional</span> <span class="built_in">i64</span> dictionary_page_offset</div><div class="line"></div><div class="line">  <span class="comment">/** optional statistics for this column chunk */</span></div><div class="line">  <span class="number">12</span>: <span class="keyword">optional</span> Statistics statistics;</div><div class="line"></div><div class="line">  <span class="comment">/** Set of all encodings used for pages in this column chunk.</span></div><div class="line">   * This information can be used to determine if all data pages are</div><div class="line">   * dictionary encoded for example **/</div><div class="line">  <span class="number">13</span>: <span class="keyword">optional</span> list&lt;PageEncodingStats&gt; encoding_stats;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ColumnChunk</span> </span>&#123;</div><div class="line">  <span class="comment">/** File where column data is stored.  If not set, assumed to be same file as</span></div><div class="line">    * metadata.  This path is relative to the current file.</div><div class="line">    **/</div><div class="line">  <span class="number">1</span>: <span class="keyword">optional</span> <span class="built_in">string</span> file_path</div><div class="line"></div><div class="line">  <span class="comment">/** Byte offset in file_path to the ColumnMetaData **/</span></div><div class="line">  <span class="number">2</span>: <span class="keyword">required</span> <span class="built_in">i64</span> file_offset</div><div class="line"></div><div class="line">  <span class="comment">/** Column metadata for this chunk. This is the same content as what is at</span></div><div class="line">   * file_path/file_offset.  Having it here has it replicated in the file</div><div class="line">   * metadata.</div><div class="line">   **/</div><div class="line">  <span class="number">3</span>: <span class="keyword">optional</span> ColumnMetaData meta_data</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">RowGroup</span> </span>&#123;</div><div class="line">  <span class="comment">/** Metadata for each column chunk in this row group.</span></div><div class="line">   * This list must have the same order as the SchemaElement list in FileMetaData.</div><div class="line">   **/</div><div class="line">  <span class="number">1</span>: <span class="keyword">required</span> list&lt;ColumnChunk&gt; columns</div><div class="line"></div><div class="line">  <span class="comment">/** Total byte size of all the uncompressed column data in this row group **/</span></div><div class="line">  <span class="number">2</span>: <span class="keyword">required</span> <span class="built_in">i64</span> total_byte_size</div><div class="line"></div><div class="line">  <span class="comment">/** Number of rows in this row group **/</span></div><div class="line">  <span class="number">3</span>: <span class="keyword">required</span> <span class="built_in">i64</span> num_rows</div><div class="line"></div><div class="line">  <span class="comment">/** If set, specifies a sort ordering of the rows in this RowGroup.</span></div><div class="line">   * The sorting columns can be a subset of all the columns.</div><div class="line">   */</div><div class="line">  <span class="number">4</span>: <span class="keyword">optional</span> list&lt;SortingColumn&gt; sorting_columns</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/** Empty struct to signal the order defined by the physical or logical type */</span></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TypeDefinedOrder</span> </span>&#123;&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Union to specify the order used for min, max, and sorting values in a column.</div><div class="line"> *</div><div class="line"> * Possible values are:</div><div class="line"> * * TypeDefinedOrder - the column uses the order defined by its logical or</div><div class="line"> *                      physical type (if there is no logical type).</div><div class="line"> *</div><div class="line"> * If the reader does not support the value of this union, min and max stats</div><div class="line"> * for this column should be ignored.</div><div class="line"> */</div><div class="line">union ColumnOrder &#123;</div><div class="line">  <span class="number">1</span>: TypeDefinedOrder TYPE_ORDER;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Description for file metadata</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">FileMetaData</span> </span>&#123;</div><div class="line">  <span class="comment">/** Version of this file **/</span></div><div class="line">  <span class="number">1</span>: <span class="keyword">required</span> <span class="built_in">i32</span> version</div><div class="line"></div><div class="line">  <span class="comment">/** Parquet schema for this file.  This schema contains metadata for all the columns.</span></div><div class="line">   * The schema is represented as a tree with a single root.  The nodes of the tree</div><div class="line">   * are flattened to a list by doing a depth-first traversal.</div><div class="line">   * The column metadata contains the path in the schema for that column which can be</div><div class="line">   * used to map columns to nodes in the schema.</div><div class="line">   * The first element is the root **/</div><div class="line">  <span class="number">2</span>: <span class="keyword">required</span> list&lt;SchemaElement&gt; schema;</div><div class="line"></div><div class="line">  <span class="comment">/** Number of rows in this file **/</span></div><div class="line">  <span class="number">3</span>: <span class="keyword">required</span> <span class="built_in">i64</span> num_rows</div><div class="line"></div><div class="line">  <span class="comment">/** Row groups in this file **/</span></div><div class="line">  <span class="number">4</span>: <span class="keyword">required</span> list&lt;RowGroup&gt; row_groups</div><div class="line"></div><div class="line">  <span class="comment">/** Optional key/value metadata **/</span></div><div class="line">  <span class="number">5</span>: <span class="keyword">optional</span> list&lt;KeyValue&gt; key_value_metadata</div><div class="line"></div><div class="line">  <span class="comment">/** String for application that wrote this file.  This should be in the format</span></div><div class="line">   * &lt;Application&gt; version &lt;App Version&gt; (build &lt;App Build Hash&gt;).</div><div class="line">   * e.g. impala version 1.0 (build 6cf94d29b2b7115df4de2c06e2ab4326d721eb55)</div><div class="line">   **/</div><div class="line">  <span class="number">6</span>: <span class="keyword">optional</span> <span class="built_in">string</span> created_by</div><div class="line"></div><div class="line">  <span class="comment">/**</span></div><div class="line">   * Sort order used for each column in this file.</div><div class="line">   *</div><div class="line">   * If this list is not present, then the order for each column is assumed to</div><div class="line">   * be Signed. In addition, min and max values for INTERVAL or DECIMAL stored</div><div class="line">   * as fixed or bytes should be ignored.</div><div class="line">   */</div><div class="line">  <span class="number">7</span>: <span class="keyword">optional</span> list&lt;ColumnOrder&gt; column_orders;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><span id="logic.type"></span></p>
<h1 id="Parquet-Logical-Type-Definitions"><a href="#Parquet-Logical-Type-Definitions" class="headerlink" title="Parquet Logical Type Definitions"></a>Parquet Logical Type Definitions</h1><p>Logical types are used to extend the types that parquet can be used to store,<br>by specifying how the primitive types should be interpreted. This keeps the set<br>of primitive types to a minimum and reuses parquet’s efficient encodings. For<br>example, strings are stored as byte arrays (binary) with a UTF8 annotation.</p>
<p>This file contains the specification for all logical types.</p>
<h3 id="Metadata-1"><a href="#Metadata-1" class="headerlink" title="Metadata"></a>Metadata</h3><p>The parquet format’s <code>ConvertedType</code> stores the type annotation. The annotation<br>may require additional metadata fields, as well as rules for those fields.</p>
<h3 id="UTF8-Strings"><a href="#UTF8-Strings" class="headerlink" title="UTF8 (Strings)"></a>UTF8 (Strings)</h3><p><code>UTF8</code> may only be used to annotate the binary primitive type and indicates<br>that the byte array should be interpreted as a UTF-8 encoded character string.</p>
<p>The sort order used for <code>UTF8</code> strings is <code>UNSIGNED</code> byte-wise comparison.</p>
<h2 id="Numeric-Types"><a href="#Numeric-Types" class="headerlink" title="Numeric Types"></a>Numeric Types</h2><h3 id="Signed-Integers"><a href="#Signed-Integers" class="headerlink" title="Signed Integers"></a>Signed Integers</h3><p><code>INT_8</code>, <code>INT_16</code>, <code>INT_32</code>, and <code>INT_64</code> annotations can be used to specify<br>the maximum number of bits in the stored value.  Implementations may use these<br>annotations to produce smaller in-memory representations when reading data.</p>
<p>If a stored value is larger than the maximum allowed by the annotation, the<br>behavior is not defined and can be determined by the implementation.<br>Implementations must not write values that are larger than the annotation<br>allows.</p>
<p><code>INT_8</code>, <code>INT_16</code>, and <code>INT_32</code> must annotate an <code>int32</code> primitive type and<br><code>INT_64</code> must annotate an <code>int64</code> primitive type. <code>INT_32</code> and <code>INT_64</code> are<br>implied by the <code>int32</code> and <code>int64</code> primitive types if no other annotation is<br>present and should be considered optional.</p>
<p>The sort order used for signed integer types is <code>SIGNED</code>.</p>
<h3 id="Unsigned-Integers"><a href="#Unsigned-Integers" class="headerlink" title="Unsigned Integers"></a>Unsigned Integers</h3><p><code>UINT_8</code>, <code>UINT_16</code>, <code>UINT_32</code>, and <code>UINT_64</code> annotations can be used to<br>specify unsigned integer types, along with a maximum number of bits in the<br>stored value. Implementations may use these annotations to produce smaller<br>in-memory representations when reading data.</p>
<p>If a stored value is larger than the maximum allowed by the annotation, the<br>behavior is not defined and can be determined by the implementation.<br>Implementations must not write values that are larger than the annotation<br>allows.</p>
<p><code>UINT_8</code>, <code>UINT_16</code>, and <code>UINT_32</code> must annotate an <code>int32</code> primitive type and<br><code>UINT_64</code> must annotate an <code>int64</code> primitive type.</p>
<p>The sort order used for unsigned integer types is <code>UNSIGNED</code>.</p>
<h3 id="DECIMAL"><a href="#DECIMAL" class="headerlink" title="DECIMAL"></a>DECIMAL</h3><p><code>DECIMAL</code> annotation represents arbitrary-precision signed decimal numbers of<br>the form <code>unscaledValue * 10^(-scale)</code>.</p>
<p>The primitive type stores an unscaled integer value. For byte arrays, binary<br>and fixed, the unscaled number must be encoded as two’s complement using<br>big-endian byte order (the most significant byte is the zeroth element). The<br>scale stores the number of digits of that value that are to the right of the<br>decimal point, and the precision stores the maximum number of digits supported<br>in the unscaled value.</p>
<p>If not specified, the scale is 0. Scale must be zero or a positive integer less<br>than the precision. Precision is required and must be a non-zero positive<br>integer. A precision too large for the underlying type (see below) is an error.</p>
<p><code>DECIMAL</code> can be used to annotate the following types:</p>
<ul>
<li><code>int32</code>: for 1 &lt;= precision &lt;= 9</li>
<li><code>int64</code>: for 1 &lt;= precision &lt;= 18; precision &lt; 10 will produce a<br>warning</li>
<li><code>fixed_len_byte_array</code>: precision is limited by the array size. Length <code>n</code><br>can store &lt;= <code>floor(log_10(2^(8*n - 1) - 1))</code> base-10 digits</li>
<li><code>binary</code>: <code>precision</code> is not limited, but is required. The minimum number of<br>bytes to store the unscaled value should be used.</li>
</ul>
<p>A <code>SchemaElement</code> with the <code>DECIMAL</code> <code>ConvertedType</code> must also have both<br><code>scale</code> and <code>precision</code> fields set, even if scale is 0 by default.</p>
<p>The sort order used for <code>DECIMAL</code> values is <code>SIGNED</code>. The order is equivalent<br>to signed comparison of decimal values.</p>
<p>If the column uses <code>int32</code> or <code>int64</code> physical types, then signed comparison of<br>the integer values produces the correct ordering. If the physical type is<br>fixed, then the correct ordering can be produced by flipping the<br>most-significant bit in the first byte and then using unsigned byte-wise<br>comparison.</p>
<h2 id="Date-Time-Types"><a href="#Date-Time-Types" class="headerlink" title="Date/Time Types"></a>Date/Time Types</h2><h3 id="DATE"><a href="#DATE" class="headerlink" title="DATE"></a>DATE</h3><p><code>DATE</code> is used to for a logical date type, without a time of day. It must<br>annotate an <code>int32</code> that stores the number of days from the Unix epoch, 1<br>January 1970.</p>
<p>The sort order used for <code>DATE</code> is <code>SIGNED</code>.</p>
<h3 id="TIME-MILLIS"><a href="#TIME-MILLIS" class="headerlink" title="TIME_MILLIS"></a>TIME_MILLIS</h3><p><code>TIME_MILLIS</code> is used for a logical time type with millisecond precision,<br>without a date. It must annotate an <code>int32</code> that stores the number of<br>milliseconds after midnight.</p>
<p>The sort order used for <code>TIME\_MILLIS</code> is <code>SIGNED</code>.</p>
<h3 id="TIME-MICROS"><a href="#TIME-MICROS" class="headerlink" title="TIME_MICROS"></a>TIME_MICROS</h3><p><code>TIME_MICROS</code> is used for a logical time type with microsecond precision,<br>without a date. It must annotate an <code>int64</code> that stores the number of<br>microseconds after midnight.</p>
<p>The sort order used for <code>TIME\_MICROS</code> is <code>SIGNED</code>.</p>
<h3 id="TIMESTAMP-MILLIS"><a href="#TIMESTAMP-MILLIS" class="headerlink" title="TIMESTAMP_MILLIS"></a>TIMESTAMP_MILLIS</h3><p><code>TIMESTAMP_MILLIS</code> is used for a combined logical date and time type, with<br>millisecond precision. It must annotate an <code>int64</code> that stores the number of<br>milliseconds from the Unix epoch, 00:00:00.000 on 1 January 1970, UTC.</p>
<p>The sort order used for <code>TIMESTAMP\_MILLIS</code> is <code>SIGNED</code>.</p>
<h3 id="TIMESTAMP-MICROS"><a href="#TIMESTAMP-MICROS" class="headerlink" title="TIMESTAMP_MICROS"></a>TIMESTAMP_MICROS</h3><p><code>TIMESTAMP_MICROS</code> is used for a combined logical date and time type with<br>microsecond precision. It must annotate an <code>int64</code> that stores the number of<br>microseconds from the Unix epoch, 00:00:00.000000 on 1 January 1970, UTC.</p>
<p>The sort order used for <code>TIMESTAMP\_MICROS</code> is <code>SIGNED</code>.</p>
<h3 id="INTERVAL"><a href="#INTERVAL" class="headerlink" title="INTERVAL"></a>INTERVAL</h3><p><code>INTERVAL</code> is used for an interval of time. It must annotate a<br><code>fixed_len_byte_array</code> of length 12. This array stores three little-endian<br>unsigned integers that represent durations at different granularities of time.<br>The first stores a number in months, the second stores a number in days, and<br>the third stores a number in milliseconds. This representation is independent<br>of any particular timezone or date.</p>
<p>Each component in this representation is independent of the others. For<br>example, there is no requirement that a large number of days should be<br>expressed as a mix of months and days because there is not a constant<br>conversion from days to months.</p>
<p>The sort order used for <code>INTERVAL</code> is <code>UNSIGNED</code>, produced by sorting by<br>the value of months, then days, then milliseconds with unsigned comparison.</p>
<h2 id="Embedded-Types"><a href="#Embedded-Types" class="headerlink" title="Embedded Types"></a>Embedded Types</h2><p>Embedded types do not have type-specific orderings.</p>
<h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><p><code>JSON</code> is used for an embedded JSON document. It must annotate a <code>binary</code><br>primitive type. The <code>binary</code> data is interpreted as a UTF-8 encoded character<br>string of valid JSON as defined by the <a href="http://json.org/" target="_blank" rel="external">JSON specification</a></p>
<h3 id="BSON"><a href="#BSON" class="headerlink" title="BSON"></a>BSON</h3><p><code>BSON</code> is used for an embedded BSON document. It must annotate a <code>binary</code><br>primitive type. The <code>binary</code> data is interpreted as an encoded BSON document as<br>defined by the <a href="http://bsonspec.org/spec.html" target="_blank" rel="external">BSON specification</a>.</p>
<h2 id="Nested-Types"><a href="#Nested-Types" class="headerlink" title="Nested Types"></a>Nested Types</h2><p>This section specifies how <code>LIST</code> and <code>MAP</code> can be used to encode nested types<br>by adding group levels around repeated fields that are not present in the data.</p>
<p>This does not affect repeated fields that are not annotated: A repeated field<br>that is neither contained by a <code>LIST</code>- or <code>MAP</code>-annotated group nor annotated<br>by <code>LIST</code> or <code>MAP</code> should be interpreted as a required list of required<br>elements where the element type is the type of the field.</p>
<p>Implementations should use either <code>LIST</code> and <code>MAP</code> annotations <em>or</em> unannotated<br>repeated fields, but not both. When using the annotations, no unannotated<br>repeated types are allowed.</p>
<h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><p><code>LIST</code> is used to annotate types that should be interpreted as lists.</p>
<p><code>LIST</code> must always annotate a 3-level structure:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;list-repetition&gt; group &lt;name&gt; (LIST) &#123;</div><div class="line">  repeated group list &#123;</div><div class="line">    &lt;element-repetition&gt; &lt;element-type&gt; element;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>The outer-most level must be a group annotated with <code>LIST</code> that contains a<br>single field named <code>list</code>. The repetition of this level must be either<br><code>optional</code> or <code>required</code> and determines whether the list is nullable.</li>
<li>The middle level, named <code>list</code>, must be a repeated group with a single<br>field named <code>element</code>.</li>
<li>The <code>element</code> field encodes the list’s element type and repetition. Element<br>repetition must be <code>required</code> or <code>optional</code>.</li>
</ul>
<p>The following examples demonstrate two of the possible lists of string values.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">// List&lt;String&gt; (list non-null, elements nullable)</div><div class="line">required group my_list (LIST) &#123;</div><div class="line">  repeated group list &#123;</div><div class="line">    optional binary element (UTF8);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// List&lt;String&gt; (list nullable, elements non-null)</div><div class="line">optional group my_list (LIST) &#123;</div><div class="line">  repeated group list &#123;</div><div class="line">    required binary element (UTF8);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Element types can be nested structures. For example, a list of lists:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">// List&lt;List&lt;Integer&gt;&gt;</div><div class="line">optional group array_of_arrays (LIST) &#123;</div><div class="line">  repeated group list &#123;</div><div class="line">    required group element (LIST) &#123;</div><div class="line">      repeated group list &#123;</div><div class="line">        required int32 element;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Backward-compatibility-rules"><a href="#Backward-compatibility-rules" class="headerlink" title="Backward-compatibility rules"></a>Backward-compatibility rules</h4><p>It is required that the repeated group of elements is named <code>list</code> and that<br>its element field is named <code>element</code>. However, these names may not be used in<br>existing data and should not be enforced as errors when reading. For example,<br>the following field schema should produce a nullable list of non-null strings,<br>even though the repeated group is named <code>element</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">optional group my_list (LIST) &#123;</div><div class="line">  repeated group element &#123;</div><div class="line">    required binary str (UTF8);</div><div class="line">  &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Some existing data does not include the inner element layer. For<br>backward-compatibility, the type of elements in <code>LIST</code>-annotated structures<br>should always be determined by the following rules:</p>
<ol>
<li>If the repeated field is not a group, then its type is the element type and<br>elements are required.</li>
<li>If the repeated field is a group with multiple fields, then its type is the<br>element type and elements are required.</li>
<li>If the repeated field is a group with one field and is named either <code>array</code><br>or uses the <code>LIST</code>-annotated group’s name with <code>_tuple</code> appended then the<br>repeated type is the element type and elements are required.</li>
<li>Otherwise, the repeated field’s type is the element type with the repeated<br>field’s repetition.</li>
</ol>
<p>Examples that can be interpreted using these rules:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">// List&lt;Integer&gt; (nullable list, non-null elements)</div><div class="line">optional group my_list (LIST) &#123;</div><div class="line">  repeated int32 element;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// List&lt;Tuple&lt;String, Integer&gt;&gt; (nullable list, non-null elements)</div><div class="line">optional group my_list (LIST) &#123;</div><div class="line">  repeated group element &#123;</div><div class="line">    required binary str (UTF8);</div><div class="line">    required int32 num;</div><div class="line">  &#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// List&lt;OneTuple&lt;String&gt;&gt; (nullable list, non-null elements)</div><div class="line">optional group my_list (LIST) &#123;</div><div class="line">  repeated group array &#123;</div><div class="line">    required binary str (UTF8);</div><div class="line">  &#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// List&lt;OneTuple&lt;String&gt;&gt; (nullable list, non-null elements)</div><div class="line">optional group my_list (LIST) &#123;</div><div class="line">  repeated group my_list_tuple &#123;</div><div class="line">    required binary str (UTF8);</div><div class="line">  &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Maps"><a href="#Maps" class="headerlink" title="Maps"></a>Maps</h3><p><code>MAP</code> is used to annotate types that should be interpreted as a map from keys<br>to values. <code>MAP</code> must annotate a 3-level structure:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;map-repetition&gt; group &lt;name&gt; (MAP) &#123;</div><div class="line">  repeated group key_value &#123;</div><div class="line">    required &lt;key-type&gt; key;</div><div class="line">    &lt;value-repetition&gt; &lt;value-type&gt; value;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>The outer-most level must be a group annotated with <code>MAP</code> that contains a<br>single field named <code>key_value</code>. The repetition of this level must be either<br><code>optional</code> or <code>required</code> and determines whether the list is nullable.</li>
<li>The middle level, named <code>key_value</code>, must be a repeated group with a <code>key</code><br>field for map keys and, optionally, a <code>value</code> field for map values.</li>
<li>The <code>key</code> field encodes the map’s key type. This field must have<br>repetition <code>required</code> and must always be present.</li>
<li>The <code>value</code> field encodes the map’s value type and repetition. This field can<br>be <code>required</code>, <code>optional</code>, or omitted.</li>
</ul>
<p>The following example demonstrates the type for a non-null map from strings to<br>nullable integers:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">// Map&lt;String, Integer&gt;</div><div class="line">required group my_map (MAP) &#123;</div><div class="line">  repeated group key_value &#123;</div><div class="line">    required binary key (UTF8);</div><div class="line">    optional int32 value;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>If there are multiple key-value pairs for the same key, then the final value<br>for that key must be the last value. Other values may be ignored or may be<br>added with replacement to the map container in the order that they are encoded.<br>The <code>MAP</code> annotation should not be used to encode multi-maps using duplicate<br>keys.</p>
<h4 id="Backward-compatibility-rules-1"><a href="#Backward-compatibility-rules-1" class="headerlink" title="Backward-compatibility rules"></a>Backward-compatibility rules</h4><p>It is required that the repeated group of key-value pairs is named <code>key_value</code><br>and that its fields are named <code>key</code> and <code>value</code>. However, these names may not<br>be used in existing data and should not be enforced as errors when reading.</p>
<p>Some existing data incorrectly used <code>MAP_KEY_VALUE</code> in place of <code>MAP</code>. For<br>backward-compatibility, a group annotated with <code>MAP_KEY_VALUE</code> that is not<br>contained by a <code>MAP</code>-annotated group should be handled as a <code>MAP</code>-annotated<br>group.</p>
<p>Examples that can be interpreted using these rules:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">// Map&lt;String, Integer&gt; (nullable map, non-null values)</div><div class="line">optional group my_map (MAP) &#123;</div><div class="line">  repeated group map &#123;</div><div class="line">    required binary str (UTF8);</div><div class="line">    required int32 num;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// Map&lt;String, Integer&gt; (nullable map, nullable values)</div><div class="line">optional group my_map (MAP_KEY_VALUE) &#123;</div><div class="line">  repeated group map &#123;</div><div class="line">    required binary key (UTF8);</div><div class="line">    optional int32 value;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Null"><a href="#Null" class="headerlink" title="Null"></a>Null</h2><p>Sometimes when discovering the schema of existing data values are always null and there’s no type information.<br>The <code>NULL</code> type can be used to annotates a column that is always null.<br>(Similar to Null type in Avro)</p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;格式化数据生成&quot;&gt;&lt;a href=&quot;#格式化数据生成&quot; class=&quot;headerlink&quot; title=&quot;格式化数据生成&quot;&gt;&lt;/a&gt;格式化数据生成&lt;/h3&gt;&lt;h4
    
    </summary>
    
      <category term="研发" scheme="http://kaidata.github.io/categories/develop/"/>
    
    
      <category term="data" scheme="http://kaidata.github.io/tags/data/"/>
    
  </entry>
  
  <entry>
    <title>spark-sql-hive纪要</title>
    <link href="http://kaidata.github.io/2017/06/09/spark-sql-hive%E7%BA%AA%E8%A6%81/"/>
    <id>http://kaidata.github.io/2017/06/09/spark-sql-hive纪要/</id>
    <published>2017-06-09T03:31:28.000Z</published>
    <updated>2017-06-09T03:31:28.216Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>spark-R纪要</title>
    <link href="http://kaidata.github.io/2017/06/09/spark-R%E7%BA%AA%E8%A6%81/"/>
    <id>http://kaidata.github.io/2017/06/09/spark-R纪要/</id>
    <published>2017-06-09T03:31:12.000Z</published>
    <updated>2017-06-09T03:31:12.828Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>oozie纪要</title>
    <link href="http://kaidata.github.io/2017/06/09/oozie%E7%BA%AA%E8%A6%81/"/>
    <id>http://kaidata.github.io/2017/06/09/oozie纪要/</id>
    <published>2017-06-09T03:29:28.000Z</published>
    <updated>2017-06-09T03:29:28.707Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>研发环境相关</title>
    <link href="http://kaidata.github.io/2017/06/09/%E7%A0%94%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/"/>
    <id>http://kaidata.github.io/2017/06/09/研发环境相关/</id>
    <published>2017-06-09T01:51:00.000Z</published>
    <updated>2017-06-09T03:26:12.190Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="研发环境"><a href="#研发环境" class="headerlink" title="研发环境"></a>研发环境</h2><h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><ol>
<li><p>配置hadoop native DLL</p>
<ol>
<li>解压文件：hadoop-common-x.y.z-bin-master.zip</li>
<li>配置环境变量：<ol>
<li>HADOOP_HOME=E:\developPlat\hadoop-common-x.y.z-bin-master</li>
<li>Path=……%JAVA_HOME%\bin;%HADOOP_HOME%\bin;……</li>
</ol>
</li>
<li>重启电脑</li>
<li><p>运行spark WordCount测试代码</p>
 <figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.apache.spark.&#123;<span class="type">SparkConf</span>, <span class="type">SparkContext</span>&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">object</span> <span class="title">WordCount</span> </span>&#123;</div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</div><div class="line">    <span class="keyword">val</span> splitor = <span class="string">"\\s+"</span></div><div class="line">    <span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setAppName(<span class="keyword">this</span>.getClass.getSimpleName)</div><div class="line">    <span class="comment">//    .setMaster("yarn-cluster")</span></div><div class="line">    <span class="comment">//      .setMaster("local")</span></div><div class="line"></div><div class="line">    <span class="keyword">val</span> sc = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</div><div class="line">    <span class="keyword">val</span> resultRdd = sc.textFile(<span class="string">"/dev/datacenter/input/env/*"</span>).flatMap(_.split(splitor).map(word =&gt; (word, <span class="number">1</span>))).reduceByKey(_ + _)</div><div class="line">    resultRdd.saveAsTextFile(<span class="string">"/dev/datacenter/output/env/spark/output/"</span> + <span class="type">System</span>.currentTimeMillis())</div><div class="line"></div><div class="line">    sc.stop()</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>运行hadoop Wordcount测试代码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WorldCountMR</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger LOG = LoggerFactory.getLogger(WorldCountMR.class);</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenizerMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">Object</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt; </span>&#123;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> IntWritable one = <span class="keyword">new</span> IntWritable(<span class="number">1</span>);</div><div class="line">        <span class="keyword">private</span> Text word = <span class="keyword">new</span> Text();</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(Object key, Text value, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</div><div class="line">            String[] words = value.toString().split(<span class="string">"\\s+"</span>);</div><div class="line">            <span class="keyword">for</span> (String w : words) &#123;</div><div class="line">                word.set(w);</div><div class="line">                context.write(word, one);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntSumReducer</span> <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>, <span class="title">IntWritable</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt; </span>&#123;</div><div class="line">        <span class="keyword">private</span> IntWritable result = <span class="keyword">new</span> IntWritable();</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</div><div class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span> (IntWritable val : values) &#123;</div><div class="line">                sum += val.get();</div><div class="line">            &#125;</div><div class="line">            result.set(sum);</div><div class="line">            context.write(key, result);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException, InterruptedException </span>&#123;</div><div class="line">        Configuration conf = <span class="keyword">new</span> Configuration();</div><div class="line"></div><div class="line">        Job job = Job.getInstance(conf, <span class="string">"word count"</span>);</div><div class="line">        job.setJarByClass(WorldCountMR.class);</div><div class="line">        job.setMapperClass(TokenizerMapper.class);</div><div class="line">        job.setCombinerClass(IntSumReducer.class);</div><div class="line">        job.setReducerClass(IntSumReducer.class);</div><div class="line">        job.setOutputKeyClass(Text.class);</div><div class="line">        job.setOutputValueClass(IntWritable.class);</div><div class="line"></div><div class="line">        FileInputFormat.setInputPaths(job, <span class="keyword">new</span> Path(<span class="string">"file:///F:\\datacenter\\input\\env\\*"</span>));</div><div class="line">        FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(<span class="string">"file:///F:\\datacenter\\output\\env\\mr\\"</span> + System.currentTimeMillis()));</div><div class="line"></div><div class="line">        <span class="keyword">int</span> exitCode = job.waitForCompletion(<span class="keyword">true</span>) ? <span class="number">0</span> : <span class="number">1</span>;</div><div class="line">        System.exit(exitCode);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            run(args);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ol>
<h3 id="IDE环境-intellij"><a href="#IDE环境-intellij" class="headerlink" title="IDE环境 intellij"></a>IDE环境 intellij</h3><ol>
<li>编码：UTF-8<ol>
<li>intellij -&gt; Setting -&gt; Editor -&gt; File Encoding<ol>
<li>Global Encoding: UTF-8</li>
<li>Project Encoding: UTF-8</li>
<li>Properties Files<ol>
<li>Default encoding for properties files: UTF-8</li>
<li>勾选 Transparent native-to-ascii conversion (否则项目中properties文件中的中文会显示成Unicode编码值)</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>换行符：intellij -&gt; Setting -&gt; Editor -&gt; Code Style -&gt; Line separator: Unix and OS X(\n)</li>
<li>安装scala 插件</li>
<li>使用系统安装的maven, 便于设置管理</li>
<li>使用系统安装的java, 便于设置管理</li>
<li>使用系统安装的scala, 便于设置管理</li>
<li><p>开发环境测试</p>
<ol>
<li><p>java</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        System.out.println(<span class="string">"hello world from kaidata"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>scala</p>
 <figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">object</span> <span class="title">HW</span> </span>&#123;</div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</div><div class="line">    println(<span class="string">"hello world from scala by kaidata"</span>)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ol>
<h3 id="开发注意事项"><a href="#开发注意事项" class="headerlink" title="开发注意事项"></a>开发注意事项</h3><ol>
<li><p>代码记录日志，日志统一代码实现使用 slf4j</p>
<ol>
<li><p>eg：</p>
 <figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">val</span> <span class="type">LOG</span> = <span class="type">LoggerFactory</span>.getLogger(<span class="keyword">this</span>.getClass)</div></pre></td></tr></table></figure>
  <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger LOG = LoggerFactory.getLogger(WorldCountMR.class);</div></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ol>
<h2 id="开发积累"><a href="#开发积累" class="headerlink" title="开发积累"></a>开发积累</h2><ol>
<li>确保开发环境正常（helloworld、wordCount）</li>
<li>官方文档，业内团队、前辈的blog       （eg：阿里搜索团队，美团点评团队，github pages）</li>
<li>intellij下, f2(javadoc), f3(源代码), ctrl+t(继承结构), ctrl+G(被调用)</li>
<li>infoq 上对眼的 演讲</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;研发环境&quot;&gt;&lt;a href=&quot;#研发环境&quot; class=&quot;headerlink&quot; title=&quot;研发环境&quot;&gt;&lt;/a&gt;研发环境&lt;/h2&gt;&lt;h3 id=&quot;系统环境&quot;&gt;&lt;
    
    </summary>
    
      <category term="研发" scheme="http://kaidata.github.io/categories/develop/"/>
    
    
      <category term="develop" scheme="http://kaidata.github.io/tags/develop/"/>
    
  </entry>
  
  <entry>
    <title>hexo相关</title>
    <link href="http://kaidata.github.io/2017/06/09/hexo%E7%9B%B8%E5%85%B3/"/>
    <id>http://kaidata.github.io/2017/06/09/hexo相关/</id>
    <published>2017-06-09T01:11:24.000Z</published>
    <updated>2017-06-09T01:45:12.770Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="config.yml"></a>config.yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"></div><div class="line"><span class="comment"># Site</span></div><div class="line"><span class="attr">title:</span> <span class="string">kaidata</span></div><div class="line"><span class="attr">subtitle:</span> <span class="string">kai</span> <span class="string">data</span> <span class="string">analysis</span></div><div class="line"><span class="attr">description:</span> <span class="string">李凯的大数据处理杂记</span></div><div class="line"><span class="attr">author:</span> <span class="string">KaiLee</span></div><div class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></div><div class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></div><div class="line"></div><div class="line"><span class="comment"># URL</span></div><div class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class="line"><span class="attr">url:</span> <span class="attr">http://kaidata.github.io/</span></div><div class="line"><span class="attr">root:</span> <span class="string">/</span></div><div class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></div><div class="line"><span class="attr">permalink_defaults:</span></div><div class="line"></div><div class="line"><span class="comment"># Directory</span></div><div class="line"><span class="attr">source_dir:</span> <span class="string">source</span></div><div class="line"><span class="attr">public_dir:</span> <span class="string">public</span></div><div class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></div><div class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></div><div class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></div><div class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></div><div class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></div><div class="line"><span class="attr">skip_render:</span></div><div class="line"></div><div class="line"><span class="comment"># Writing</span></div><div class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></div><div class="line"><span class="attr">default_layout:</span> <span class="string">post</span></div><div class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></div><div class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></div><div class="line"><span class="attr">filename_case:</span> <span class="number">0</span></div><div class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></div><div class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></div><div class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></div><div class="line"><span class="attr">future:</span> <span class="literal">true</span></div><div class="line"><span class="attr">highlight:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  tab_replace:</span></div><div class="line"></div><div class="line"><span class="comment"># Category &amp; Tag</span></div><div class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></div><div class="line"><span class="attr">category_map:</span></div><div class="line">		<span class="string">大数据:</span> <span class="string">bigdata</span></div><div class="line">		<span class="string">语言:</span> <span class="string">lang</span></div><div class="line">		<span class="string">框架:</span> <span class="string">framework</span></div><div class="line">		<span class="string">编译构建:</span> <span class="string">build</span></div><div class="line">		<span class="string">其他:</span> <span class="string">other</span></div><div class="line"><span class="attr">tag_map:</span></div><div class="line"></div><div class="line"><span class="comment"># Date / Time format</span></div><div class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></div><div class="line"><span class="comment">## You can customize the date format as defined in</span></div><div class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></div><div class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></div><div class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></div><div class="line"></div><div class="line"><span class="comment"># Pagination</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line"><span class="attr">per_page:</span> <span class="number">10</span></div><div class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></div><div class="line"></div><div class="line"><span class="comment"># Extensions</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line"><span class="comment">#plugins:</span></div><div class="line">  <span class="comment">#- hexo-generator-feed</span></div><div class="line">  <span class="comment">#- hexo-generator-sitemap</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="attr">theme:</span> <span class="string">landscape</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">git</span></div><div class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/kaidata/kaidata.github.com.git</span></div><div class="line"><span class="attr">  branch:</span> <span class="string">master</span></div></pre></td></tr></table></figure>
<h3 id="命令相关"><a href="#命令相关" class="headerlink" title="命令相关"></a>命令相关</h3><pre><code>1. 主题
    1. maupassant
    <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</div><div class="line">npm install hexo-renderer-jade@0.3.0 --save</div><div class="line">npm install hexo-renderer-sass --save</div></pre></td></tr></table></figure>

2. 插件
    1. hexo-admin
    <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save hexo-admin</div></pre></td></tr></table></figure>

    2.
    <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save hexo-tag-aplayer</div></pre></td></tr></table></figure>

    3.
    <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-migrator-wordpress --save</div></pre></td></tr></table></figure>

    4.
    <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div><div class="line">npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure>

    5.
    <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure>
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;config-yml&quot;&gt;&lt;a href=&quot;#config-yml&quot; class=&quot;headerlink&quot; title=&quot;config.yml&quot;&gt;&lt;/a&gt;config
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>buildFramework</title>
    <link href="http://kaidata.github.io/2017/06/07/buildFramework/"/>
    <id>http://kaidata.github.io/2017/06/07/buildFramework/</id>
    <published>2017-06-07T01:31:38.000Z</published>
    <updated>2017-06-08T09:29:32.575Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="task"><a href="#task" class="headerlink" title="task"></a>task</h3><pre><code><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn -Pyarn -Phive -Phive-thriftserver -Psparkr -Pbigtop-dist -Phadoop-2.6 -Dhadoop.version=2.6.0 -DskipTests clean package -X -e</div></pre></td></tr></table></figure>
</code></pre><h3 id="question"><a href="#question" class="headerlink" title="question"></a>question</h3><ol>
<li> <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[INFO] BUILD FAILURE</div><div class="line">[INFO] ------------------------------------------------------------------------</div><div class="line">[INFO] Total time: 02:18 min</div><div class="line">[INFO] Finished at: 2017-06-08T16:45:12+08:00</div><div class="line">[INFO] Final Memory: 59M/3484M</div><div class="line">[INFO] ------------------------------------------------------------------------</div><div class="line">[ERROR] PermGen space -&gt; [Help 1]</div><div class="line">java.lang.OutOfMemoryError: PermGen space</div><div class="line">	at java.lang.ClassLoader.defineClass1(Native Method)</div><div class="line">	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)</div></pre></td></tr></table></figure>
<p> 解决方法：</p>
 <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export MAVEN_OPTS="-Xmx4g -XX:ReservedCodeCacheSize=512m  -XX:MaxPermSize=1024m"</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="spark"><a href="#spark" class="headerlink" title="spark"></a>spark</h3><ol>
<li>mvn -Pyarn -Phadoop-2.6 -Dhadoop.version=2.6.0 -DskipTests clean package</li>
<li>mvn -Pyarn -Pbigtop-dist -Phadoop-2.6 -Dhadoop.version=2.6.0 -DskipTests clean package</li>
<li>mvn -Pyarn -Phadoop-2.4 -Dhadoop.version=2.4.0 -Phive -Phive-thriftserver -DskipTests clean package</li>
<li>mvn -Pyarn -Phadoop-2.4 -Dscala-2.10 -DskipTests clean package</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;task&quot;&gt;&lt;a href=&quot;#task&quot; class=&quot;headerlink&quot; title=&quot;task&quot;&gt;&lt;/a&gt;task&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&lt;fig
    
    </summary>
    
      <category term="编译构建" scheme="http://kaidata.github.io/categories/build/"/>
    
    
      <category term="spark" scheme="http://kaidata.github.io/tags/spark/"/>
    
      <category term="build" scheme="http://kaidata.github.io/tags/build/"/>
    
  </entry>
  
  <entry>
    <title>git相关</title>
    <link href="http://kaidata.github.io/2017/06/06/git%E7%9B%B8%E5%85%B3/"/>
    <id>http://kaidata.github.io/2017/06/06/git相关/</id>
    <published>2017-06-06T11:30:27.000Z</published>
    <updated>2017-06-06T11:36:17.493Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h5 id="error-RPC-failed-result-56-HTTP-code-200"><a href="#error-RPC-failed-result-56-HTTP-code-200" class="headerlink" title="error: RPC failed; result=56, HTTP code = 200"></a>error: RPC failed; result=56, HTTP code = 200</h5><ol>
<li>git config http.postBuffer 524288000</li>
<li>git config –global http.postBuffer 524288000</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h5 id=&quot;error-RPC-failed-result-56-HTTP-code-200&quot;&gt;&lt;a href=&quot;#error-RPC-failed-result-56-HTT
    
    </summary>
    
    
  </entry>
  
</feed>
